Question 1 - Detecting Potential Payment Fraud in an Online Marketplace
-----------------------------------------------------------------------

create table transactions(
	transaction_id int primary key,
	user_id int,
	payment_method varchar(255),
	amount decimal(10,2),
	transaction_date date,
	status varchar(255)
	);

INSERT INTO transactions (transaction_id, user_id, payment_method, amount, transaction_date, status) VALUES
(101, 202, 'Credit Card', 200.43, '2025-02-16', 'Completed'),
(102, 203, 'Netbanking', 3233.10, '2025-03-11', 'Failed'),
(103, 203, 'Netbanking', 1195.35, '2025-02-24', 'Failed'),
(104, 203, 'Debit Card', 376.11, '2025-03-10', 'Failed'),
(105, 203, 'Netbanking', 112.01, '2025-04-04', 'Failed'),
(106, 203, 'Credit Card', 111.10, '2025-09-12', 'Failed'),
(107, 203, 'Debit Card', 2344.50, '2025-10-03', 'Failed');

ANSWER
------
select user_id ,count (status) as failed_transactions,count(distinct payment_method) as distinct_payment_method
from transactions
where status ='Failed'
group by user_id;

Question 2 - : Average Response Time
------------------------------------

CREATE TABLE support_tickets(
id int primary key,
customer_id int,
created_at varchar(19),
resolved_at varchar(19)
);

INSERT INTO support_tickets (id, customer_id, created_at, resolved_at) VALUES
(1, 1, '2023-12-21 05:42:00', '2024-01-01 05:42:00'),
(2, 2, '2023-07-08 14:22:00', NULL),
(3, 3, '2023-05-22 08:54:00', '2023-06-17 08:54:00');

ANSWER
------
SELECT
    ROUND(AVG(EXTRACT(EPOCH FROM (TO_TIMESTAMP(resolved_at, 'YYYY-MM-DD HH24:MI:SS') - TO_TIMESTAMP(created_at, 'YYYY-MM-DD HH24:MI:SS'))) / 3600),2) 
    AS average_response_time
FROM support_tickets
WHERE resolved_at IS NOT NULL;

OR

SELECT
    ROUND(AVG(EXTRACT(EPOCH FROM (resolved_at::timestamp - created_at::timestamp))/3600),2) 
    AS average_response_time
FROM support_tickets
WHERE resolved_at IS NOT NULL;

Question 3 - Highest-Spending Customers per City
------------------------------------------------
create table orders(
id int primary key,
name varchar(255),
city varchar(255)
);


create table orders(
id int primary key,
customer_id int references customers(id),
amount decimal(10,2)
)

INSERT INTO customers (id, name, city) VALUES
(1, 'Customer 1', 'Los Angeles'),
(2, 'Customer 2', 'Chicago'),
(3, 'Customer 3', 'Chicago');

INSERT INTO orders (id, customer_id, amount) VALUES
(1, 1, 150.75),
(2, 2, 230.50),
(3, 3, 345.25);


Question 4 - : E-commerce Product Request Report
------------------------------------------------

create table products(
id int not null primary key,
name varchar(255),
category varchar(255),
is_available smallint
)

create table requests(
product_id int references products(id),
client_email varchar(255)
)

INSERT INTO products (id, name, category, is_available) VALUES
(1, 'PromoPro', 'beauty products', 1),
(2, 'AdVantage', 'outdoor gear', 1),
(3, 'MarketMagnet', 'sports equipment', 1),
(5, 'AdBlitz', 'beauty products', 0);

insert into requests (product_id,client_email) values
(1,'fskhg'),
(1,'sdfgfg'),
(1,'try44'),
(2,'egweg'),
(2,'fgwetg5'),
(3,'dsgwegt'),
(3,'45t235t'),
(3,'gwergg'),
(5,'etgeg'),
(5,'efgwetg5')

ANSWER
------
select p.name as product_name, count(product_id) as total_requests 
from products as p
inner join requests as r
on p.id=r.product_id
where is_available=1
group by name
order by total_requests desc;

Question - 5 - Active Campaign Engagement Report
------------------------------------------------

create table 

INSERT INTO campaigns (id, name, is_active) VALUES
(1, 'SummerSavings', 1),
(2, 'FallFrenzy', 1),
(3, 'WinterWonderland', 0);

INSERT INTO engagements (campaign_id, views, clicks) VALUES
(1, 100, 10),
(1, 150, 20),
(2, 200, 30),
(2, 250, 40),
(3, 300, 50),
(1, 120, 15),
(2, 180, 25),
(3, 220, 35),
(1, 130, 18),
(2, 210, 28);

ANSWER
------
select c.name ,
count(e.campaign_id) as total_engagements,
sum(e.views+e.clicks) as total_views_and_likes
from campaigns as c
inner join engagements as e
on c.id=e.campaign_id
where is_active = 1
group by c.name
order by c.name asc;

Question - 6 : Tax Report Summary
---------------------------------

create table accounts(
	id int not null primary key,
	email varchar(255)
)

create table reports(
account_id int  references accounts(id),
dt varchar(19),
amount decimal(6,2)
)

INSERT INTO accounts (id, email) VALUES
(1, 'hratke0@disqus.com'),
(2, 'lcaiger1@si.edu'),
(3, 'gburkett2@vinaora.com');

INSERT INTO reports (account_id, dt, amount) VALUES
(1, '2023-05-27 01:46:19', 830.45),
(2, '2023-01-15 09:23:21', 2518.18),
(3, '2023-05-08 01:44:41', 4637.39),
(1, '2023-06-30 15:02:03', 3953.69),
(2, '2023-12-05 04:39:31', 3357.99),
(3, '2023-02-03 09:41:00', 1907.38),
(1, '2022-12-30 04:05:57', 1217.29),
(2, '2024-01-24 14:18:07', 2441.66),
(3, '2024-01-05 23:19:31', 3055.20),
(1, '2023-05-26 01:54:24', 2077.36);

ANSWER
------

SELECT a.email, sum(amount) as total_report_amount
FROM accounts a
JOIN reports r ON a.id = r.account_id
WHERE EXTRACT(YEAR FROM CAST(r.dt AS TIMESTAMP)) = 2023
GROUP BY a.email;

Question - 7 Antivirus Device Scan Report
-----------------------------------------

create table devices (
id int not null primary key,
mac_address varchar(255)
)

create table scanned_files(
device_id int references devices(id),
filename varchar(255),
is_infected smallint
)

INSERT INTO devices (id, mac_address) VALUES
(1, '66-0F-84-41-B8-8E'),
(2, 'A6-1A-2F-3A-7B-83'),
(3, '76-CD-24-48-F0-DD');

insert into scanned_files (device_id,filename,is_infected) values 
(1,'Fine1.mp3',0),
(1,'File2.xls',1),
(2,'File3.xls',0),
(2,'File2.xls',1),
(2,'File2.xls',1),
(3,'File2.xls',0),
(3,'File2.xls',1),
(3,'File2.xls',0),
(3,'File2.xls',1),
(3,'File2.xls',0);

Question - 8 - Cryptocurrency Transactions Report
-------------------------------------------------

create table coins(
id int not null primary key,
name varchar(255)
)

create table transactions2(
coin_id int references coins(id),
dt varchar(19),
amount decimal(5,2)
)

insert into coins (id,name) values (1,'BitCash'),
(2,'Etherium'),
(3,'LiteCoin')

INSERT INTO transactions2 (coin_id, dt, amount)
VALUES
(1, '2023-07-03 12:16:53', 34.32),
(1, '2023-12-08 12:14:58', 47.59),
(2, '2022-12-16 20:42:10', 45.54),
(2, '2023-11-05 09:27:11', 53.3),
(3, '2023-12-05 06:45:23', 71.51),
(3, '2023-01-19 01:43:25', 97.18),
(3, '2024-01-24 13:34:00', 86.68),
(1, '2023-05-07 05:30:06', 25.6),
(2, '2023-03-08 08:07:20', 40.11),
(3, '2023-08-13 10:44:54', 87.54);

ANSWER
------

select name, sum(amount) as total_transaction_amount, count(coin_id)
from coins as c inner join transactions2 as t
on c.id=t.coin_id
where extract(year from cast(t.dt as timestamp))=2023
group by name

Question - 9 - Customer Domain Ownership Report
-----------------------------------------------
CREATE TABLE CUSTOMERS2(
ID INT NOT NULL PRIMARY KEY,
EMAIL VARCHAR(255)
)

CREATE TABLE DOMAINS(
CUSTOMER_ID INT REFERENCES CUSTOMERS2(ID),
NAME VARCHAR(255)
)

INSERT INTO customers2 (id, email)
VALUES
(1, 'ebayldon0@washingtonpost.com'),
(2, 'agammade1@comcast.net'),
(3, 'goloshkin2@reference.com'),
(4, 'cantonescu3@earthlink.net'),
(5, 'fparzis4@ow.ly'),
(6, 'cpetroulis5@shutter');

INSERT INTO DOMAINS (CUSTOMER_ID,NAME) values 
(1,'fdgf'),
(1,'rgfw'),
(1,'dfgeg'),
(2,'fdgf'),
(2,'rgfw'),
(3,'dfgeg'),
(3,'fdgf'),
(3,'rgfw'),
(4,'dfgeg'),
(4,'dgw')

ANSWER
------

select email, count(customer_id) as total_domains
from customers2 as c inner join domains as d
on c.id=d.customer_id
group by email
order by email asc

Question - 10 - : E-commerce Wishlist Report
--------------------------------------------

create table products2(
id int not null primary key,
name varchar(255),
price decimal(6,2),
in_stock smallint
)

create table wishlists(
product_id int references products(id),
customer_email varchar(255)
)

INSERT INTO products2 (id, name, price, in_stock)
VALUES
(1, 'TechGadget Pro X', 324.24, 1),
(2, 'LuxuryHome Decor Set', 884.9, 1),
(3, 'FitnessTracker Elite', 698.59, 0);

INSERT INTO wishlists (product_id, customer_email)
VALUES
(1, 'user1@example.com'),
(1, 'user2@example.com'),
(2, 'user3@example.com'),
(2, 'user4@example.com'),
(2, 'user5@example.com'),
(3, 'user6@example.com'),
(1, 'user7@example.com'),
(2, 'user8@example.com'),
(1, 'user9@example.com'),
(3, 'user10@example.com');

ANSWER
------

select name as product_name,price, count(product_id) as total_wishlist_count
from products2 as p inner join wishlists as w 
on p.id=w.product_id
where in_stock=1
group by name, price;

Question - 11 - Email Campaign Report
-------------------------------------

CREATE TABLE CAMPAIGNS2(
ID INT NOT NULL PRIMARY KEY,
NAME VARCHAR(255)
)

CREATE TABLE EMAIL_STATS(
CAMPAIGN_ID INT REFERENCES CAMPAIGNS2(ID),
EMAILS_SENT INT,
EMAILS_OPENED INT
)

INSERT INTO CAMPAIGNS2 (ID,NAME) VALUES 
(1,'SUMMERSALE'),
(2,'FALLPROMO'),
(3,'WINTERWONDERLAND')

INSERT INTO email_stats (campaign_id, emails_sent, emails_opened)
VALUES
(1, 1000, 800),
(2, 1500, 1200),
(3, 2000, 1800),
(1, 500, 300),
(2, 700, 500),
(3, 800, 600),
(1, 300, 200),
(2, 400, 300),
(3, 600, 500),
(3, 400, 300);

ANSWER
------

SELECT NAME AS CAMPAIGN_NAME ,SUM(EMAILS_SENT) AS TOTAL_EMAIL_SENT, 
SUM(EMAILS_OPENED) AS TOTAL_EMAILS_OPENED, SUM(EMAILS_SENT) - SUM(EMAILS_OPENED) AS TOTAL_EMAILS_NOT_OPENED
FROM CAMPAIGNS2 AS C INNER JOIN EMAIL_STATS AS E
ON C.ID=E.CAMPAIGN_ID
GROUP BY NAME
ORDER BY NAME ASC

Question - 12 - Auction Lot Offers Report
-----------------------------------------

CREATE TABLE lots(
ID INT NOT NULL PRIMARY KEY,
NAME VARCHAR(255)
)

create table offers(
lot_id int references lots(id),
amount decimal(6,2)
)

insert into lots (id, name) values
(1,'Acacia parramattensis Tindale'),
(2,'Poa arctica R. Br. ssp. aperta (Scribn. & Merr.) Soreng'),
(3,'Calophyllum inophyllum L.')

insert into offers (lot_id,amount) values 
(1,260.91),
(1,802.83),
(1,986.78),
(2,814.57),
(2,999.06),
(2,414.67),
(3,200.41),
(3,593.07),
(3,701.88),
(3,972.87)

ANSWER
------
select name as lot_name, max(amount), count(lot_id)
from lots as l inner join offers as o 
on l.id=o.lot_id
group by name
order by name asc;

Question - 13 - Online Banking Transactions Report
--------------------------------------------------

CREATE TABLE ACCOUNTS3(
ID INT NOT NULL PRIMARY KEY,
IBAN VARCHAR(255)
)

CREATE TABLE TRANSACTION3(
ACCOUNT_ID INT REFERENCES ACCOUNTS3(ID),
DT CHAR(19),
AMOUNT DECIMAL(5,2)
)

INSERT INTO ACCOUNTS3 (ID, IBAN) VALUES 
(1,'BG40 RFFX 4898 53DD CZD6 KQ'),
(2,'PT42 5267 0592 8451 8001 2180 3'),
(3,'FR96 8758 8909 81LR DJ71 ERKN D56')

INSERT INTO TRANSACTION3 (ACCOUNT_ID,DT,AMOUNT) VALUES 
(1,'2022-09-02 06:33:39',33.31),
(1,'2022-09-20 08:14:39',31.77),
(1,'2022-09-25 06:41:45',72.84),

(2, '2022-09-04 22:28:12', 35.26),
(2, '2022-09-17 07:57:29', 33.27),
(2, '2022-09-27 22:30:36', 70.78),
(3, '2022-09-16 21:54:12', 75.04),
(3, '2022-09-19 18:27:39', 71.19),
(3, '2022-09-28 01:38:56', 14.34),
(3, '2022-08-30 01:35:31', 69.19);

ANSWER
------
SELECT IBAN , MIN(AMOUNT) AS MIN_TRANSACTION, MAX(AMOUNT) AS MAX_TRANSACTION,
ROUND(AVG(AMOUNT),2) AS AVG_TRANSACTION, COUNT(AMOUNT) AS TOTAL_TRANSACTIONS
FROM ACCOUNTS3 AS A INNER JOIN TRANSACTION3 AS T
ON A.ID=T.ACCOUNT_ID
GROUP BY IBAN
ORDER BY IBAN ASC

Question - 14 - Top Wishlist Products Summary
---------------------------------------------

CREATE TABLE PRODUCTS3(
ID INT PRIMARY KEY,
NAME VARCHAR(255),
PRICE DECIMAL(6,2),
IN_STOCK SMALLINT
)

CREATE TABLE WISHLISTS2(
PRODUCT_ID INT REFERENCES PRODUCTS3(ID),
CUSTOMER_EMAIL VARCHAR(255)
)

INSERT INTO products3 (id, name, price, in_stock)
VALUES
(1, 'TechGadget Pro X', 274.80, 1),
(2, 'LuxuryHome Decor Set', 262.84, 1),
(3, 'FitnessTracker Elite', 637.92, 0),
(4, 'GourmetCookware Set', 535.34, 1),
(5, 'Fashionista Wardrobe Collection', 525.44, 1);

INSERT INTO WISHLISTS2 (PRODUCT_ID,CUSTOMER_EMAIL)
VALUES
(1,'SFVSF'),
(1,'SFVSF'),
(1,'SFVSF'),
(1,'SFVSF'),
(2,'SFVSF'),
(2,'SFVSF'),
(2,'SFVSF'),
(2,'SFVSF'),
(2,'SFVSF'),
(3,'SFVSF'),
(3,'SFVSF'),
(3,'SFVSF'),
(3,'SFVSF'),
(3,'SFVSF'),
(4,'SFVSF'),
(4,'SFVSF'),
(4,'SFVSF'),
(4,'SFVSF'),
(5,'SFVSF'),
(5,'SFVSF'),

ANSWER
------

SELECT NAME, PRICE, COUNT(PRODUCT_ID) AS TOTAL_WISHES
FROM PRODUCTS3 AS P INNER JOIN WISHLISTS2 AS W
ON P.ID=W.PRODUCT_ID
WHERE IN_STOCK=1
GROUP BY NAME,PRICE
ORDER BY TOTAL_WISHES DESC
LIMIT 3

Question - 15 - E-commerce Customer Purchases Report
----------------------------------------------------

create table customers4(
id int primary key,
email varchar(255)
)

create table purchases(
customer_id int references customers4(id),
dt varchar(19),
amount decimal(6,2)
)

insert into customers4 (id,email) values
(1,'floggie0@newsvine.com'),
(2,'sgillbe1@ca.gov'),
(3,'jgohn2@elegantthemes.com')

INSERT INTO purchases (customer_id, dt, amount)
VALUES
(2, '2024-02-21 02:56:12', 228.58),
(2, '2024-02-23 09:32:47', 972.41),
(1, '2024-03-14 15:50:13', 109.16),
(1, '2024-03-17 00:31:44', 11.49),
(1, '2024-03-17 04:15:42', 692.64),
(2, '2024-03-01 04:35:09', 589.74),
(2, '2024-03-13 14:42:23', 508.75),
(2, '2024-03-17 07:57:36', 933.91),
(2, '2024-03-19 08:24:38', 488.26),
(2, '2024-03-31 23:30:54', 55.07),
(3, '2024-03-03 11:34:30', 816.67),
(3, '2024-03-08 23:46:07', 672.93),
(3, '2024-03-15 18:09:56', 260.66),
(3, '2024-03-20 15:18:11', 321.07),
(3, '2024-03-20 17:40:35', 29.06),
(3, '2024-03-20 23:41:39', 314.85),
(3, '2024-03-25 11:41:07', 67.12),
(1, '2024-04-05 03:05:10', 417.78),
(2,'2024-04-09 08:16:17 ',697.53),
(3,'2024-04-02 07:56:48', 156.27)

ANSWER
------

select email, count(customer_id) as total_purchases, sum(amount) as total_purchase_amount
from customers4 as c inner join purchases as p
on c.id=p.customer_id
where extract(year from cast(p.dt as timestamp))=2024 and
extract (month from cast(p.dt as timestamp))=3
group by email
order by email asc

Question - 16 - Report on Applicants Pending Consular Service
-------------------------------------------------------------

CREATE TABLE APPLICANTS (
ID INT PRIMARY KEY,
EMAIL VARCHAR(255)
)

CREATE TABLE APPOINTMENTS(
APPLICANT_ID INT REFERENCES APPLICANTS(ID),
DT VARCHAR(19),
IS_RECEIVED BOOLEAN
)

INSERT INTO APPLICANTS (ID, EMAIL) VALUES
(1,'nkienzle0@spiegel.de'),
(2,'alaste1@bbc.co.uk'),
(3,'jjochanany2@ow.ly'),
(4,'bsenn3@salon.com'),
(5,'bwhittall4@nhs.uk')

INSERT INTO appointments (applicant_id, dt, is_received)
VALUES
(1, '2024-04-27', FALSE),
(2, '2024-04-01', FALSE),
(3, '2024-04-15', FALSE),
(4, '2024-03-27', FALSE),
(5, '2024-03-26', TRUE);

SELECT
    a.email,
    ab.dt AS scheduled_appointment,
    (DATE '2024-04-10' - CAST(ab.dt AS DATE)) AS days_of_delay
FROM 
    applicants AS a
INNER JOIN 
    appointments AS ab ON a.id = ab.applicant_id
WHERE 
    ab.is_received = FALSE
    AND CAST(ab.dt AS DATE) < DATE '2024-04-10'
ORDER BY 
    days_of_delay desc

Question - 17 - Weekend Appointments for Consular Services Rescheduling
----------------------------------------------------------

CREATE TABLE APPLICANTS2 (
ID INT PRIMARY KEY,
EMAIL VARCHAR(255)
)

CREATE TABLE APPOINTMENTS2(
APPLICANT_ID INT REFERENCES APPLICANTS(ID),
DT VARCHAR(19))

insert into applicants2 (id,email) values
(1,'rastlatt0@instagram.com'),
(2,'gcarmody1@stanford.edu'),
(3,'mgreenset2@state.tx.us')

insert into appointments(applicant_id,dt) values
(1,'2024-05-26 01:36:43'),
(2,'2024-05-27 16:30:28'),
(3,'2024-05-18 19:28:52')

Question - 18 - Active Domains Registration by Country with Total
-----------------------------------------------------------------

create table countries(
id int primary key,
name varchar(255)
)

create table domains2(
country_id int references countries(id),
name varchar(255),
is_active boolean
)

insert into countries(id, name) values
(1,'Azerbaijan'),
(2,'Colombia'),
(3,'China')

insert into domains2(country_id,name,is_active) values
(1,'fgweg',true),
(1,'fgweg',true),
(1,'fgweg',true),
(1,'fgweg',true),
(1,'fgweg',true),
(1,'fgweg',true),
(1,'fgweg',true),
(2,'fgweg',true),
(2,'fgweg',true),
(2,'fgweg',true),
(2,'fgweg',true),
(2,'fgweg',true),
(3,'fgweg',true),
(3,'fgweg',true),
(3,'fgweg',true),
(3,'fgweg',true),
(3,'fgweg',true),
(3,'fgweg',true),
(1,'fgweg',false),
(1,'fgweg',false);

ANSWER
------
select c.name as country_name, count(country_id) as total_domains
from countries as c inner join domains2 as d 
on c.id=d.country_id
where is_active = true
group by c.name
order by c.name asc;

Question - 19 - Domain Renewal Overview
---------------------------------------

CREATE TABLE DOMAINS3(
NAME VARCHAR(255),
NEXT_RENEWAL_DATE VARCHAR(19)
)

INSERT INTO DOMAINS3(NAME, NEXT_RENEWAL_DATE) VALUES
('WIRED.COM','2024-06-14 00:10:12'),
('BLOGGER.COM','2024-07-18 05:54:57'),
('COM.COM','2024-07-21 02:57:25')

ANSWER
------

SELECT NAME, DATE '2024-04-10' AS TODAY_DATE,cast(next_renewal_date as date) as next_renewal_date, 
    ( CAST(NEXT_RENEWAL_DATE AS DATE) - (DATE '2024-04-10')) AS days_until_renewal
	from domains3

Question - 20 - User Transaction Detail
---------------------------------------

create table users(
id int primary key,
email varchar(255)
)

create table transactions3(
user_id int references users(id),
dt varchar(19),
amount decimal(5,2)
)

insert into users(id, email) values
(1,'jgbvksuhfwbfgwg.com'),
(2,'sfgsdfbetbet.com'),
(3,'gbsfgfgejhgheigu.com')

INSERT INTO transactions3 (user_id, dt, amount)
VALUES
(1, '2024-02-23 19:30:03', 942.50),
(1, '2024-03-07 09:01:15', 855.22),
(1, '2024-04-01 04:18:41', 253.35),
(1, '2024-04-07 02:40:58', 886.88),
(2, '2024-02-25 05:11:39', 957.77),
(2, '2024-03-06 03:00:40', 413.39),
(2, '2024-03-07 14:41:03', 906.16),
(2, '2024-03-10 00:58:13', 116.59),
(2, '2024-03-13 23:38:29', 550.31),
(2, '2024-03-22 03:07:46', 196.23),
(2, '2024-03-24 00:23:14', 399.76),
(2, '2024-03-25 12:28:18', 398.07),
(2, '2024-03-27 09:11:15', 212.33),
(2, '2024-04-09 06:33:26', 97.85),
(3, '2024-03-01 17:24:48', 323.11),
(3, '2024-03-05 10:16:06', 673.23),
(3, '2024-03-08 14:19:46', 236.74),
(3, '2024-03-23 15:37:47', 234.87),
(3, '2024-04-05 20:55:45', 989.35),
(3, '2024-04-07 05:26:35', 369.20);

ANSWER
------
select email, count(user_id) as total_transactions, min(amount) as min_amount, max(amount) as max_amount,sum(amount) as total_amount
from users as u inner join transactions3 as t
on u.id=t.user_id
where extract(month from cast (t.dt as timestamp))=3 and
extract(year from cast(t.dt as timestamp))=2024
group by email
order by email asc

Question - 21 - Total Transactions and Sum for Each User
---------------------------------------------------------
create table users2(
id int primary key,
email varchar(255)
)

create table transactions4(
user_id int references users(id),
dt varchar(19),
amount decimal(5,2)
)

insert into users2(id,email) values
(1,'ldfgdgg@google.co.uk'),
(2,'hsfgrg@sina.com.cn'),
(3,'mmdfggw@hibu.com')

INSERT INTO transactions4 (user_id, dt, amount)
VALUES
(3, '2022-12-05 00:16:56', 162.11),
(1, '2023-05-20 03:20:58', 81.58),
(1, '2023-06-08 19:24:02', 52.46),
(1, '2023-06-27 21:16:07', 447.59),
(1, '2023-07-20 08:19:32', 136.68),
(1, '2023-12-11 17:08:05', 852.55),
(1, '2023-12-15 04:45:54', 77.11),
(1, '2023-12-22 00:46:34', 670.71),
(1, '2023-12-29 12:43:23', 948.46),
(2, '2023-01-04 00:51:46', 793.50),
(2, '2023-04-07 16:29:14', 762.52),
(2, '2023-06-17 17:42:50', 527.18),
(2, '2023-10-10 11:16:51', 733.47),
(2, '2023-10-18 23:32:00', 920.14),
(3, '2023-03-27 18:31:41', 408.13),
(3, '2023-04-08 09:57:55', 817.88),
(3, '2023-05-18 09:47:14', 916.98),
(3, '2023-09-14 14:00:54', 53.30),
(3, '2023-09-30 01:34:01', 589.37),
(3, '2024-01-27 15:13:58', 666.37);

ANSWER
------

select email, count(user_id) as total_transaction, sum(amount) as total_amount
from users2 as u inner join transactions4 as t
on u.id=t.user_id
where extract(year from cast(t.dt as timestamp))=2023
group by email
order by email asc

Question - 22 - Top Cryptocurrencies by Average Transaction Amount
------------------------------------------------------------------
CREATE table coins (
	id int primary key,
	name varchar(255)
)

create table transactions5(
coin_id int references coins(id),
dt varchar(19),
amount decimal(5,2)
)

insert into coins (id,name) values 
(1,'BitCash'),
(2,'Etherium'),
(3,'LiteCoin'),
(4,'Ripple'),
(5,'DogeCoin')

insert into transactions5(coin_id,dt,amount) values
(1, '2022-12-09 19:40:17', 60.91),
(1, '2023-01-02 09:35:37', 76.35),
(1, '2023-03-21 09:34:39', 23.11),
(1, '2023-08-11 03:43:27', 80.20),
(1, '2023-10-21 19:42:46', 29.59),
(2, '2023-07-08 19:47:20', 69.49),
(2, '2023-09-22 14:23:40', 23.13),
(3, '2023-01-08 10:22:10', 72.45),
(3, '2023-01-28 00:54:51', 98.72),
(3, '2023-02-24 00:13:32', 70.36),
(3, '2023-05-16 15:13:19', 93.59),
(4, '2023-05-24 13:43:44', 9.34),
(4, '2023-07-25 14:59:09', 78.52);

select name ,round(avg(amount),2) as avg_transaction_amount
from coins c inner join transactions5 as t
on c.id=t.coin_id
where extract(year from cast(t.dt as timestamp))=2023
group by name
limit 3

Question - 23 - Cryptocurrency Transactions Summary Report
----------------------------------------------------------

CREATE table coins2 (
	id int primary key,
	name varchar(255)
)

create table transactions6(
coin_id int references coins2(id),
dt varchar(19),
amount decimal(5,2)
)

insert into coins2 (id,name) values 
(1,'BitCash'),
(2,'Etherium'),
(3,'LiteCoin')

INSERT INTO transactions6 (coin_id, dt, amount) VALUES
(1, '2024-02-24 14:56:31', 69.38),
(2, '2024-02-24 17:23:54', 46.79),
(1, '2024-03-07 15:07:57', 73.45),
(1, '2024-03-13 00:47:18', 2.10),
(1, '2024-03-13 06:21:06', 5.68),
(1, '2024-03-14 15:06:59', 25.32),
(1, '2024-03-20 02:10:37', 72.85),
(2, '2024-03-09 12:06:47', 67.79),
(2, '2024-03-16 06:17:14', 82.87),
(2, '2024-03-24 11:11:23', 5.96),
(2, '2024-03-26 14:36:34', 21.80),
(3, '2024-03-20 08:28:56', 5.07),
(3, '2024-03-23 06:45:13', 11.85),
(3, '2024-03-27 02:40:23', 34.25),
(3, '2024-03-28 07:37:50', 81.12),
(3, '2024-03-29 07:34:32', 19.06),
(1, '2024-04-02 08:49:17', 13.04),
(2, '2024-04-04 17:29:13', 4.74),
(2, '2024-04-04 20:17:36', 94.42),
(2, '2024-04-07 01:47:46', 64.76);

ANSWER
------

select name, count(coin_id) as total_transactions, min(amount) as min_amount,
max(amount) as max_amount, round(avg(amount),2) as avg_amount
from coins2 as c inner join transactions6 as t 
on c.id=t.coin_id
where extract(year from cast(t.dt as timestamp))=2024 and
extract (month from cast(t.dt as timestamp)) =3
group by name
order by total_transactions desc

Question- 24
------------
select distinct extension ,count(distinct is_suspicious) as total_suspicious_files
from suspicious_files 
where is_suspicious=1
group by extension
order by extension asc
limit 5

Question - 25
-------------
select email, count(is_scanned) as total_scanned_devices
from clients as c inner join devices as d
on c.id=d.client_id
where extract(year from cast(d.schedule_scan_dt as timestamp)) =2024
and extract (month from cast (d.schedule_scan_dt as timestamp)) =3
group by email
order by email asc














