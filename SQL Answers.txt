Question 1 - Detecting Potential Payment Fraud in an Online Marketplace
-----------------------------------------------------------------------

create table transactions(
	transaction_id int primary key,
	user_id int,
	payment_method varchar(255),
	amount decimal(10,2),
	transaction_date date,
	status varchar(255)
	);

INSERT INTO transactions (transaction_id, user_id, payment_method, amount, transaction_date, status) VALUES
(101, 202, 'Credit Card', 200.43, '2025-02-16', 'Completed'),
(102, 203, 'Netbanking', 3233.10, '2025-03-11', 'Failed'),
(103, 203, 'Netbanking', 1195.35, '2025-02-24', 'Failed'),
(104, 203, 'Debit Card', 376.11, '2025-03-10', 'Failed'),
(105, 203, 'Netbanking', 112.01, '2025-04-04', 'Failed'),
(106, 203, 'Credit Card', 111.10, '2025-09-12', 'Failed'),
(107, 203, 'Debit Card', 2344.50, '2025-10-03', 'Failed');

ANSWER
------
select user_id ,count (status) as failed_transactions,count(distinct payment_method) as distinct_payment_method
from transactions
where status ='Failed'
group by user_id;

Question 2 - : Average Response Time
------------------------------------

CREATE TABLE support_tickets(
id int primary key,
customer_id int,
created_at varchar(19),
resolved_at varchar(19)
);

INSERT INTO support_tickets (id, customer_id, created_at, resolved_at) VALUES
(1, 1, '2023-12-21 05:42:00', '2024-01-01 05:42:00'),
(2, 2, '2023-07-08 14:22:00', NULL),
(3, 3, '2023-05-22 08:54:00', '2023-06-17 08:54:00');

ANSWER
------
SELECT
    ROUND(AVG(EXTRACT(EPOCH FROM (TO_TIMESTAMP(resolved_at, 'YYYY-MM-DD HH24:MI:SS') - TO_TIMESTAMP(created_at, 'YYYY-MM-DD HH24:MI:SS'))) / 3600),2) 
    AS average_response_time
FROM support_tickets
WHERE resolved_at IS NOT NULL;

OR

SELECT
    ROUND(AVG(EXTRACT(EPOCH FROM (resolved_at::timestamp - created_at::timestamp))/3600),2) 
    AS average_response_time
FROM support_tickets
WHERE resolved_at IS NOT NULL;

Question 3 - Highest-Spending Customers per City
------------------------------------------------
create table orders(
id int primary key,
name varchar(255),
city varchar(255)
);


create table orders(
id int primary key,
customer_id int references customers(id),
amount decimal(10,2)
)

INSERT INTO customers (id, name, city) VALUES
(1, 'Customer 1', 'Los Angeles'),
(2, 'Customer 2', 'Chicago'),
(3, 'Customer 3', 'Chicago');

INSERT INTO orders (id, customer_id, amount) VALUES
(1, 1, 150.75),
(2, 2, 230.50),
(3, 3, 345.25);


Question 4 - : E-commerce Product Request Report
------------------------------------------------

create table products(
id int not null primary key,
name varchar(255),
category varchar(255),
is_available smallint
)

create table requests(
product_id int references products(id),
client_email varchar(255)
)

INSERT INTO products (id, name, category, is_available) VALUES
(1, 'PromoPro', 'beauty products', 1),
(2, 'AdVantage', 'outdoor gear', 1),
(3, 'MarketMagnet', 'sports equipment', 1),
(5, 'AdBlitz', 'beauty products', 0);

insert into requests (product_id,client_email) values
(1,'fskhg'),
(1,'sdfgfg'),
(1,'try44'),
(2,'egweg'),
(2,'fgwetg5'),
(3,'dsgwegt'),
(3,'45t235t'),
(3,'gwergg'),
(5,'etgeg'),
(5,'efgwetg5')

ANSWER
------
select p.name as product_name, count(product_id) as total_requests 
from products as p
inner join requests as r
on p.id=r.product_id
where is_available=1
group by name
order by total_requests desc;

Question - 5 - Active Campaign Engagement Report
------------------------------------------------

create table 

INSERT INTO campaigns (id, name, is_active) VALUES
(1, 'SummerSavings', 1),
(2, 'FallFrenzy', 1),
(3, 'WinterWonderland', 0);

INSERT INTO engagements (campaign_id, views, clicks) VALUES
(1, 100, 10),
(1, 150, 20),
(2, 200, 30),
(2, 250, 40),
(3, 300, 50),
(1, 120, 15),
(2, 180, 25),
(3, 220, 35),
(1, 130, 18),
(2, 210, 28);

ANSWER
------
select c.name ,
count(e.campaign_id) as total_engagements,
sum(e.views+e.clicks) as total_views_and_likes
from campaigns as c
inner join engagements as e
on c.id=e.campaign_id
where is_active = 1
group by c.name
order by c.name asc;

Question - 6 : Tax Report Summary
---------------------------------

create table accounts(
	id int not null primary key,
	email varchar(255)
)

create table reports(
account_id int  references accounts(id),
dt varchar(19),
amount decimal(6,2)
)

INSERT INTO accounts (id, email) VALUES
(1, 'hratke0@disqus.com'),
(2, 'lcaiger1@si.edu'),
(3, 'gburkett2@vinaora.com');

INSERT INTO reports (account_id, dt, amount) VALUES
(1, '2023-05-27 01:46:19', 830.45),
(2, '2023-01-15 09:23:21', 2518.18),
(3, '2023-05-08 01:44:41', 4637.39),
(1, '2023-06-30 15:02:03', 3953.69),
(2, '2023-12-05 04:39:31', 3357.99),
(3, '2023-02-03 09:41:00', 1907.38),
(1, '2022-12-30 04:05:57', 1217.29),
(2, '2024-01-24 14:18:07', 2441.66),
(3, '2024-01-05 23:19:31', 3055.20),
(1, '2023-05-26 01:54:24', 2077.36);

ANSWER
------

SELECT a.email, sum(amount) as total_report_amount
FROM accounts a
JOIN reports r ON a.id = r.account_id
WHERE EXTRACT(YEAR FROM CAST(r.dt AS TIMESTAMP)) = 2023
GROUP BY a.email;

Question - 7 Antivirus Device Scan Report
-----------------------------------------

create table devices (
id int not null primary key,
mac_address varchar(255)
)

create table scanned_files(
device_id int references devices(id),
filename varchar(255),
is_infected smallint
)

INSERT INTO devices (id, mac_address) VALUES
(1, '66-0F-84-41-B8-8E'),
(2, 'A6-1A-2F-3A-7B-83'),
(3, '76-CD-24-48-F0-DD');

insert into scanned_files (device_id,filename,is_infected) values 
(1,'Fine1.mp3',0),
(1,'File2.xls',1),
(2,'File3.xls',0),
(2,'File2.xls',1),
(2,'File2.xls',1),
(3,'File2.xls',0),
(3,'File2.xls',1),
(3,'File2.xls',0),
(3,'File2.xls',1),
(3,'File2.xls',0);

select mac_address,count(filename), sum(is_infected) as total_infected_files
from devices as d inner join scanned_files as s
on d.id=s.device_id
group by mac_address 

Question - 8 - Cryptocurrency Transactions Report
-------------------------------------------------

create table coins(
id int not null primary key,
name varchar(255)
)

create table transactions2(
coin_id int references coins(id),
dt varchar(19),
amount decimal(5,2)
)

insert into coins (id,name) values (1,'BitCash'),
(2,'Etherium'),
(3,'LiteCoin')

INSERT INTO transactions2 (coin_id, dt, amount)
VALUES
(1, '2023-07-03 12:16:53', 34.32),
(1, '2023-12-08 12:14:58', 47.59),
(2, '2022-12-16 20:42:10', 45.54),
(2, '2023-11-05 09:27:11', 53.3),
(3, '2023-12-05 06:45:23', 71.51),
(3, '2023-01-19 01:43:25', 97.18),
(3, '2024-01-24 13:34:00', 86.68),
(1, '2023-05-07 05:30:06', 25.6),
(2, '2023-03-08 08:07:20', 40.11),
(3, '2023-08-13 10:44:54', 87.54);

ANSWER
------

select name, sum(amount) as total_transaction_amount, count(coin_id)
from coins as c inner join transactions2 as t
on c.id=t.coin_id
where extract(year from cast(t.dt as timestamp))=2023
group by name

Question - 9 - Customer Domain Ownership Report
-----------------------------------------------
CREATE TABLE CUSTOMERS2(
ID INT NOT NULL PRIMARY KEY,
EMAIL VARCHAR(255)
)

CREATE TABLE DOMAINS(
CUSTOMER_ID INT REFERENCES CUSTOMERS2(ID),
NAME VARCHAR(255)
)

INSERT INTO customers2 (id, email)
VALUES
(1, 'ebayldon0@washingtonpost.com'),
(2, 'agammade1@comcast.net'),
(3, 'goloshkin2@reference.com'),
(4, 'cantonescu3@earthlink.net'),
(5, 'fparzis4@ow.ly'),
(6, 'cpetroulis5@shutter');

INSERT INTO DOMAINS (CUSTOMER_ID,NAME) values 
(1,'fdgf'),
(1,'rgfw'),
(1,'dfgeg'),
(2,'fdgf'),
(2,'rgfw'),
(3,'dfgeg'),
(3,'fdgf'),
(3,'rgfw'),
(4,'dfgeg'),
(4,'dgw')

ANSWER
------

select email, count(customer_id) as total_domains
from customers2 as c inner join domains as d
on c.id=d.customer_id
group by email
order by email asc

Question - 10 - : E-commerce Wishlist Report
--------------------------------------------

create table products2(
id int not null primary key,
name varchar(255),
price decimal(6,2),
in_stock smallint
)

create table wishlists(
product_id int references products(id),
customer_email varchar(255)
)

INSERT INTO products2 (id, name, price, in_stock)
VALUES
(1, 'TechGadget Pro X', 324.24, 1),
(2, 'LuxuryHome Decor Set', 884.9, 1),
(3, 'FitnessTracker Elite', 698.59, 0);

INSERT INTO wishlists (product_id, customer_email)
VALUES
(1, 'user1@example.com'),
(1, 'user2@example.com'),
(2, 'user3@example.com'),
(2, 'user4@example.com'),
(2, 'user5@example.com'),
(3, 'user6@example.com'),
(1, 'user7@example.com'),
(2, 'user8@example.com'),
(1, 'user9@example.com'),
(3, 'user10@example.com');

ANSWER
------

select name as product_name,price, count(product_id) as total_wishlist_count
from products2 as p inner join wishlists as w 
on p.id=w.product_id
where in_stock=1
group by name, price;

Question - 11 - Email Campaign Report
-------------------------------------

CREATE TABLE CAMPAIGNS2(
ID INT NOT NULL PRIMARY KEY,
NAME VARCHAR(255)
)

CREATE TABLE EMAIL_STATS(
CAMPAIGN_ID INT REFERENCES CAMPAIGNS2(ID),
EMAILS_SENT INT,
EMAILS_OPENED INT
)

INSERT INTO CAMPAIGNS2 (ID,NAME) VALUES 
(1,'SUMMERSALE'),
(2,'FALLPROMO'),
(3,'WINTERWONDERLAND')

INSERT INTO email_stats (campaign_id, emails_sent, emails_opened)
VALUES
(1, 1000, 800),
(2, 1500, 1200),
(3, 2000, 1800),
(1, 500, 300),
(2, 700, 500),
(3, 800, 600),
(1, 300, 200),
(2, 400, 300),
(3, 600, 500),
(3, 400, 300);

ANSWER
------

SELECT NAME AS CAMPAIGN_NAME ,SUM(EMAILS_SENT) AS TOTAL_EMAIL_SENT, 
SUM(EMAILS_OPENED) AS TOTAL_EMAILS_OPENED, SUM(EMAILS_SENT) - SUM(EMAILS_OPENED) AS TOTAL_EMAILS_NOT_OPENED
FROM CAMPAIGNS2 AS C INNER JOIN EMAIL_STATS AS E
ON C.ID=E.CAMPAIGN_ID
GROUP BY NAME
ORDER BY NAME ASC

Question - 12 - Auction Lot Offers Report
-----------------------------------------

CREATE TABLE lots(
ID INT NOT NULL PRIMARY KEY,
NAME VARCHAR(255)
)

create table offers(
lot_id int references lots(id),
amount decimal(6,2)
)

insert into lots (id, name) values
(1,'Acacia parramattensis Tindale'),
(2,'Poa arctica R. Br. ssp. aperta (Scribn. & Merr.) Soreng'),
(3,'Calophyllum inophyllum L.')

insert into offers (lot_id,amount) values 
(1,260.91),
(1,802.83),
(1,986.78),
(2,814.57),
(2,999.06),
(2,414.67),
(3,200.41),
(3,593.07),
(3,701.88),
(3,972.87)

ANSWER
------
select name as lot_name, max(amount), count(lot_id)
from lots as l inner join offers as o 
on l.id=o.lot_id
group by name
order by name asc;

Question - 13 - Online Banking Transactions Report
--------------------------------------------------

CREATE TABLE ACCOUNTS3(
ID INT NOT NULL PRIMARY KEY,
IBAN VARCHAR(255)
)

CREATE TABLE TRANSACTION3(
ACCOUNT_ID INT REFERENCES ACCOUNTS3(ID),
DT CHAR(19),
AMOUNT DECIMAL(5,2)
)

INSERT INTO ACCOUNTS3 (ID, IBAN) VALUES 
(1,'BG40 RFFX 4898 53DD CZD6 KQ'),
(2,'PT42 5267 0592 8451 8001 2180 3'),
(3,'FR96 8758 8909 81LR DJ71 ERKN D56')

INSERT INTO TRANSACTION3 (ACCOUNT_ID,DT,AMOUNT) VALUES 
(1,'2022-09-02 06:33:39',33.31),
(1,'2022-09-20 08:14:39',31.77),
(1,'2022-09-25 06:41:45',72.84),

(2, '2022-09-04 22:28:12', 35.26),
(2, '2022-09-17 07:57:29', 33.27),
(2, '2022-09-27 22:30:36', 70.78),
(3, '2022-09-16 21:54:12', 75.04),
(3, '2022-09-19 18:27:39', 71.19),
(3, '2022-09-28 01:38:56', 14.34),
(3, '2022-08-30 01:35:31', 69.19);

ANSWER
------
SELECT IBAN , MIN(AMOUNT) AS MIN_TRANSACTION, MAX(AMOUNT) AS MAX_TRANSACTION,
ROUND(AVG(AMOUNT),2) AS AVG_TRANSACTION, COUNT(AMOUNT) AS TOTAL_TRANSACTIONS
FROM ACCOUNTS3 AS A INNER JOIN TRANSACTION3 AS T
ON A.ID=T.ACCOUNT_ID
GROUP BY IBAN
ORDER BY IBAN ASC

Question - 14 - Top Wishlist Products Summary
---------------------------------------------

CREATE TABLE PRODUCTS3(
ID INT PRIMARY KEY,
NAME VARCHAR(255),
PRICE DECIMAL(6,2),
IN_STOCK SMALLINT
)

CREATE TABLE WISHLISTS2(
PRODUCT_ID INT REFERENCES PRODUCTS3(ID),
CUSTOMER_EMAIL VARCHAR(255)
)

INSERT INTO products3 (id, name, price, in_stock)
VALUES
(1, 'TechGadget Pro X', 274.80, 1),
(2, 'LuxuryHome Decor Set', 262.84, 1),
(3, 'FitnessTracker Elite', 637.92, 0),
(4, 'GourmetCookware Set', 535.34, 1),
(5, 'Fashionista Wardrobe Collection', 525.44, 1);

INSERT INTO WISHLISTS2 (PRODUCT_ID,CUSTOMER_EMAIL)
VALUES
(1,'SFVSF'),
(1,'SFVSF'),
(1,'SFVSF'),
(1,'SFVSF'),
(2,'SFVSF'),
(2,'SFVSF'),
(2,'SFVSF'),
(2,'SFVSF'),
(2,'SFVSF'),
(3,'SFVSF'),
(3,'SFVSF'),
(3,'SFVSF'),
(3,'SFVSF'),
(3,'SFVSF'),
(4,'SFVSF'),
(4,'SFVSF'),
(4,'SFVSF'),
(4,'SFVSF'),
(5,'SFVSF'),
(5,'SFVSF'),

ANSWER
------

SELECT NAME, PRICE, COUNT(PRODUCT_ID) AS TOTAL_WISHES
FROM PRODUCTS3 AS P INNER JOIN WISHLISTS2 AS W
ON P.ID=W.PRODUCT_ID
WHERE IN_STOCK=1
GROUP BY NAME,PRICE
ORDER BY TOTAL_WISHES DESC
LIMIT 3

Question - 15 - E-commerce Customer Purchases Report
----------------------------------------------------

create table customers4(
id int primary key,
email varchar(255)
)

create table purchases(
customer_id int references customers4(id),
dt varchar(19),
amount decimal(6,2)
)

insert into customers4 (id,email) values
(1,'floggie0@newsvine.com'),
(2,'sgillbe1@ca.gov'),
(3,'jgohn2@elegantthemes.com')

INSERT INTO purchases (customer_id, dt, amount)
VALUES
(2, '2024-02-21 02:56:12', 228.58),
(2, '2024-02-23 09:32:47', 972.41),
(1, '2024-03-14 15:50:13', 109.16),
(1, '2024-03-17 00:31:44', 11.49),
(1, '2024-03-17 04:15:42', 692.64),
(2, '2024-03-01 04:35:09', 589.74),
(2, '2024-03-13 14:42:23', 508.75),
(2, '2024-03-17 07:57:36', 933.91),
(2, '2024-03-19 08:24:38', 488.26),
(2, '2024-03-31 23:30:54', 55.07),
(3, '2024-03-03 11:34:30', 816.67),
(3, '2024-03-08 23:46:07', 672.93),
(3, '2024-03-15 18:09:56', 260.66),
(3, '2024-03-20 15:18:11', 321.07),
(3, '2024-03-20 17:40:35', 29.06),
(3, '2024-03-20 23:41:39', 314.85),
(3, '2024-03-25 11:41:07', 67.12),
(1, '2024-04-05 03:05:10', 417.78),
(2,'2024-04-09 08:16:17 ',697.53),
(3,'2024-04-02 07:56:48', 156.27)

ANSWER
------

select email, count(customer_id) as total_purchases, sum(amount) as total_purchase_amount
from customers4 as c inner join purchases as p
on c.id=p.customer_id
where extract(year from cast(p.dt as timestamp))=2024 and
extract (month from cast(p.dt as timestamp))=3
group by email
order by email asc

Question - 16 - Report on Applicants Pending Consular Service
-------------------------------------------------------------

CREATE TABLE APPLICANTS (
ID INT PRIMARY KEY,
EMAIL VARCHAR(255)
)

CREATE TABLE APPOINTMENTS(
APPLICANT_ID INT REFERENCES APPLICANTS(ID),
DT VARCHAR(19),
IS_RECEIVED BOOLEAN
)

INSERT INTO APPLICANTS (ID, EMAIL) VALUES
(1,'nkienzle0@spiegel.de'),
(2,'alaste1@bbc.co.uk'),
(3,'jjochanany2@ow.ly'),
(4,'bsenn3@salon.com'),
(5,'bwhittall4@nhs.uk')

INSERT INTO appointments (applicant_id, dt, is_received)
VALUES
(1, '2024-04-27', FALSE),
(2, '2024-04-01', FALSE),
(3, '2024-04-15', FALSE),
(4, '2024-03-27', FALSE),
(5, '2024-03-26', TRUE);

SELECT
    a.email,
    ab.dt AS scheduled_appointment,
    (DATE '2024-04-10' - CAST(ab.dt AS DATE)) AS days_of_delay
FROM 
    applicants AS a
INNER JOIN 
    appointments AS ab ON a.id = ab.applicant_id
WHERE 
    ab.is_received = FALSE
    AND CAST(ab.dt AS DATE) < DATE '2024-04-10'
ORDER BY 
    days_of_delay desc

Question - 17 - Weekend Appointments for Consular Services Rescheduling
----------------------------------------------------------

CREATE TABLE APPLICANTS2 (
ID INT PRIMARY KEY,
EMAIL VARCHAR(255)
)

CREATE TABLE APPOINTMENTS2(
APPLICANT_ID INT REFERENCES APPLICANTS(ID),
DT VARCHAR(19))

insert into applicants2 (id,email) values
(1,'rastlatt0@instagram.com'),
(2,'gcarmody1@stanford.edu'),
(3,'mgreenset2@state.tx.us')

insert into appointments(applicant_id,dt) values
(1,'2024-05-26 01:36:43'),
(2,'2024-05-27 16:30:28'),
(3,'2024-05-18 19:28:52')

Question - 18 - Active Domains Registration by Country with Total
-----------------------------------------------------------------

create table countries(
id int primary key,
name varchar(255)
)

create table domains2(
country_id int references countries(id),
name varchar(255),
is_active boolean
)

insert into countries(id, name) values
(1,'Azerbaijan'),
(2,'Colombia'),
(3,'China')

insert into domains2(country_id,name,is_active) values
(1,'fgweg',true),
(1,'fgweg',true),
(1,'fgweg',true),
(1,'fgweg',true),
(1,'fgweg',true),
(1,'fgweg',true),
(1,'fgweg',true),
(2,'fgweg',true),
(2,'fgweg',true),
(2,'fgweg',true),
(2,'fgweg',true),
(2,'fgweg',true),
(3,'fgweg',true),
(3,'fgweg',true),
(3,'fgweg',true),
(3,'fgweg',true),
(3,'fgweg',true),
(3,'fgweg',true),
(1,'fgweg',false),
(1,'fgweg',false);

ANSWER
------
select c.name as country_name, count(country_id) as total_domains
from countries as c inner join domains2 as d 
on c.id=d.country_id
where is_active = true
group by c.name
order by c.name asc;

Question - 19 - Domain Renewal Overview
---------------------------------------

CREATE TABLE DOMAINS3(
NAME VARCHAR(255),
NEXT_RENEWAL_DATE VARCHAR(19)
)

INSERT INTO DOMAINS3(NAME, NEXT_RENEWAL_DATE) VALUES
('WIRED.COM','2024-06-14 00:10:12'),
('BLOGGER.COM','2024-07-18 05:54:57'),
('COM.COM','2024-07-21 02:57:25')

ANSWER
------

SELECT NAME, DATE '2024-04-10' AS TODAY_DATE,cast(next_renewal_date as date) as next_renewal_date, 
    ( CAST(NEXT_RENEWAL_DATE AS DATE) - (DATE '2024-04-10')) AS days_until_renewal
	from domains3

Question - 20 - User Transaction Detail
---------------------------------------

create table users(
id int primary key,
email varchar(255)
)

create table transactions3(
user_id int references users(id),
dt varchar(19),
amount decimal(5,2)
)

insert into users(id, email) values
(1,'jgbvksuhfwbfgwg.com'),
(2,'sfgsdfbetbet.com'),
(3,'gbsfgfgejhgheigu.com')

INSERT INTO transactions3 (user_id, dt, amount)
VALUES
(1, '2024-02-23 19:30:03', 942.50),
(1, '2024-03-07 09:01:15', 855.22),
(1, '2024-04-01 04:18:41', 253.35),
(1, '2024-04-07 02:40:58', 886.88),
(2, '2024-02-25 05:11:39', 957.77),
(2, '2024-03-06 03:00:40', 413.39),
(2, '2024-03-07 14:41:03', 906.16),
(2, '2024-03-10 00:58:13', 116.59),
(2, '2024-03-13 23:38:29', 550.31),
(2, '2024-03-22 03:07:46', 196.23),
(2, '2024-03-24 00:23:14', 399.76),
(2, '2024-03-25 12:28:18', 398.07),
(2, '2024-03-27 09:11:15', 212.33),
(2, '2024-04-09 06:33:26', 97.85),
(3, '2024-03-01 17:24:48', 323.11),
(3, '2024-03-05 10:16:06', 673.23),
(3, '2024-03-08 14:19:46', 236.74),
(3, '2024-03-23 15:37:47', 234.87),
(3, '2024-04-05 20:55:45', 989.35),
(3, '2024-04-07 05:26:35', 369.20);

ANSWER
------
select email, count(user_id) as total_transactions, min(amount) as min_amount, max(amount) as max_amount,sum(amount) as total_amount
from users as u inner join transactions3 as t
on u.id=t.user_id
where extract(month from cast (t.dt as timestamp))=3 and
extract(year from cast(t.dt as timestamp))=2024
group by email
order by email asc

Question - 21 - Total Transactions and Sum for Each User
---------------------------------------------------------
create table users2(
id int primary key,
email varchar(255)
)

create table transactions4(
user_id int references users(id),
dt varchar(19),
amount decimal(5,2)
)

insert into users2(id,email) values
(1,'ldfgdgg@google.co.uk'),
(2,'hsfgrg@sina.com.cn'),
(3,'mmdfggw@hibu.com')

INSERT INTO transactions4 (user_id, dt, amount)
VALUES
(3, '2022-12-05 00:16:56', 162.11),
(1, '2023-05-20 03:20:58', 81.58),
(1, '2023-06-08 19:24:02', 52.46),
(1, '2023-06-27 21:16:07', 447.59),
(1, '2023-07-20 08:19:32', 136.68),
(1, '2023-12-11 17:08:05', 852.55),
(1, '2023-12-15 04:45:54', 77.11),
(1, '2023-12-22 00:46:34', 670.71),
(1, '2023-12-29 12:43:23', 948.46),
(2, '2023-01-04 00:51:46', 793.50),
(2, '2023-04-07 16:29:14', 762.52),
(2, '2023-06-17 17:42:50', 527.18),
(2, '2023-10-10 11:16:51', 733.47),
(2, '2023-10-18 23:32:00', 920.14),
(3, '2023-03-27 18:31:41', 408.13),
(3, '2023-04-08 09:57:55', 817.88),
(3, '2023-05-18 09:47:14', 916.98),
(3, '2023-09-14 14:00:54', 53.30),
(3, '2023-09-30 01:34:01', 589.37),
(3, '2024-01-27 15:13:58', 666.37);

ANSWER
------

select email, count(user_id) as total_transaction, sum(amount) as total_amount
from users2 as u inner join transactions4 as t
on u.id=t.user_id
where extract(year from cast(t.dt as timestamp))=2023
group by email
order by email asc

Question - 22 - Top Cryptocurrencies by Average Transaction Amount
------------------------------------------------------------------
CREATE table coins (
	id int primary key,
	name varchar(255)
)

create table transactions5(
coin_id int references coins(id),
dt varchar(19),
amount decimal(5,2)
)

insert into coins (id,name) values 
(1,'BitCash'),
(2,'Etherium'),
(3,'LiteCoin'),
(4,'Ripple'),
(5,'DogeCoin')

insert into transactions5(coin_id,dt,amount) values
(1, '2022-12-09 19:40:17', 60.91),
(1, '2023-01-02 09:35:37', 76.35),
(1, '2023-03-21 09:34:39', 23.11),
(1, '2023-08-11 03:43:27', 80.20),
(1, '2023-10-21 19:42:46', 29.59),
(2, '2023-07-08 19:47:20', 69.49),
(2, '2023-09-22 14:23:40', 23.13),
(3, '2023-01-08 10:22:10', 72.45),
(3, '2023-01-28 00:54:51', 98.72),
(3, '2023-02-24 00:13:32', 70.36),
(3, '2023-05-16 15:13:19', 93.59),
(4, '2023-05-24 13:43:44', 9.34),
(4, '2023-07-25 14:59:09', 78.52);

select name ,round(avg(amount),2) as avg_transaction_amount
from coins c inner join transactions5 as t
on c.id=t.coin_id
where extract(year from cast(t.dt as timestamp))=2023
group by name
limit 3

Question - 23 - Cryptocurrency Transactions Summary Report
----------------------------------------------------------

CREATE table coins2 (
	id int primary key,
	name varchar(255)
)

create table transactions6(
coin_id int references coins2(id),
dt varchar(19),
amount decimal(5,2)
)

insert into coins2 (id,name) values 
(1,'BitCash'),
(2,'Etherium'),
(3,'LiteCoin')

INSERT INTO transactions6 (coin_id, dt, amount) VALUES
(1, '2024-02-24 14:56:31', 69.38),
(2, '2024-02-24 17:23:54', 46.79),
(1, '2024-03-07 15:07:57', 73.45),
(1, '2024-03-13 00:47:18', 2.10),
(1, '2024-03-13 06:21:06', 5.68),
(1, '2024-03-14 15:06:59', 25.32),
(1, '2024-03-20 02:10:37', 72.85),
(2, '2024-03-09 12:06:47', 67.79),
(2, '2024-03-16 06:17:14', 82.87),
(2, '2024-03-24 11:11:23', 5.96),
(2, '2024-03-26 14:36:34', 21.80),
(3, '2024-03-20 08:28:56', 5.07),
(3, '2024-03-23 06:45:13', 11.85),
(3, '2024-03-27 02:40:23', 34.25),
(3, '2024-03-28 07:37:50', 81.12),
(3, '2024-03-29 07:34:32', 19.06),
(1, '2024-04-02 08:49:17', 13.04),
(2, '2024-04-04 17:29:13', 4.74),
(2, '2024-04-04 20:17:36', 94.42),
(2, '2024-04-07 01:47:46', 64.76);

ANSWER
------

select name, count(coin_id) as total_transactions, min(amount) as min_amount,
max(amount) as max_amount, round(avg(amount),2) as avg_amount
from coins2 as c inner join transactions6 as t 
on c.id=t.coin_id
where extract(year from cast(t.dt as timestamp))=2024 and
extract (month from cast(t.dt as timestamp)) =3
group by name
order by total_transactions desc

Question- 24
------------
CREATE TABLE suspicious_files (
    filename VARCHAR(255),
    extension VARCHAR(255),
    scan_dt VARCHAR(19),
    is_suspicious BOOLEAN
);

INSERT INTO suspicious_files VALUES
('Sapien.avi', '.avi', '2024-03-30 12:24:10', 1),
('Pulvinar.doc', '.doc', '2024-03-08 22:00:41', 1),
('TemporConvallisNulla.gif', '.gif', '2024-03-29 21:32:41', 1),
('InFaucibus.mp3', '.mp3', '2024-03-20 14:18:32', 1),
('EleifendPedeLibero.ppt', '.ppt', '2024-03-05 04:47:56', 1),
('VestibulumAnteIpsum.ppt', '.ppt', '2024-03-05 17:34:34', 1),
('IntegerPede.ppt', '.ppt', '2024-03-12 17:11:28', 1),
('VenenatisNon.tiff', '.tiff', '2024-03-20 18:04:47', 1),
('IaculisDiam.xls', '.xls', '2024-03-01 05:18:03', 1),
('QuisqueArcuLibero.xls', '.xls', '2024-03-09 09:00:32', 1);

ANSWER
------

SELECT extension, COUNT(*) AS total_suspicious_files
FROM suspicious_files AS s 
WHERE is_suspicious = TRUE
  AND EXTRACT(YEAR FROM CAST(s.scan_dt AS TIMESTAMP)) = 2024
  AND EXTRACT(MONTH FROM CAST(s.scan_dt AS TIMESTAMP)) = 3
GROUP BY extension
ORDER BY total_suspicious_files DESC, extension ASC
LIMIT 5;

Question - 25
-------------

CREATE TABLE clients (
    id INT PRIMARY KEY,
    email VARCHAR(255)
);

CREATE TABLE devices (
    client_id INT,
    mac_address VARCHAR(255),
    is_scanned BOOLEAN,
    scheduled_scan_dt VARCHAR(19),
    FOREIGN KEY (client_id) REFERENCES clients(id)
);

INSERT INTO clients VALUES
(1, 'cbracegirdle0@irs.gov'),
(2, 'gwickardt1@msu.edu'),
(3, 'mpaulon2@edublogs.org');

INSERT INTO devices VALUES
(1, '37-FE-45-2B-9D-2A', 1, '2024-03-07 00:00:05'),
(1, '13-82-F2-48-88-FD', 1, '2024-03-11 06:53:47'),
(1, '0D-56-2A-B2-33-EF', 1, '2024-03-30 19:41:31'),
(3, '71-EB-63-A2-3C-AF', 1, '2024-03-03 07:50:20'),
(3, '0B-40-DF-14-53-0F', 1, '2024-03-21 11:10:52');

ANSWER
------

select email, count(is_scanned) as total_scanned_devices
from clients as c inner join devices as d
on c.id=d.client_id
where extract(year from cast(d.schedule_scan_dt as timestamp)) =2024
and extract (month from cast (d.schedule_scan_dt as timestamp)) =3
group by email
order by email asc

Question 26: Resource Usage Report for Online Hosting Panel
-----------------------------------------------------------

CREATE TABLE customers (
    id INT PRIMARY KEY,
    email VARCHAR(255)
);

CREATE TABLE site_metrics (
    customer_id INT,
    cpu_usage DECIMAL(5,2),
    memory_usage DECIMAL(5,2),
    disk_usage DECIMAL(5,2),
    FOREIGN KEY (customer_id) REFERENCES customers(id)
);

INSERT INTO customers VALUES
(1, 'lrathke0@usa.gov'),
(2, 'epearsall1@fema.gov');

INSERT INTO site_metrics VALUES
(1, 31.53, 80.84, 1.51),
(1, 12.54, 26.47, 47.74),
(1, 12.34, 46.24, 34.43),
(1, 26.64, 84.98, 17.56),
(2, 80.45, 50.05, 10.63),
(2, 40.14, 86.67, 15.98),
(2, 30.14, 34.38, 17.67),
(2, 1.11, 83.44, 2.95);

ANSWER
------

select email, round(avg(cpu_usage),2), round(avg(memory_usage),2), round(avg(disk_usage),2)
from customers as c inner join site_metrics as s
on c.id=s.customer_id
group by email
HAVING 
    AVG(cpu_usage) > 50 
    OR AVG(memory_usage) > 50 
    OR AVG(disk_usage) > 50;

Question 27: Dashboard Report for Online Hosting Customers Panel
----------------------------------------------------------------
CREATE TABLE customers (
    id INT PRIMARY KEY,
    email VARCHAR(255)
);

CREATE TABLE sites (
    customer_id INT,
    url VARCHAR(255),
    is_active BOOLEAN,
    FOREIGN KEY (customer_id) REFERENCES customers(id)
);

INSERT INTO customers VALUES
(1, 'dcristofol0@slashdot.org'),
(2, 'mbillanie1@japanpost.jp'),
(3, 'hmainz2@utexas.edu');

INSERT INTO sites VALUES
(1, 'https://trellian.com', 1),
(1, 'https://www.google.de', 1),
(1, 'https://merriam-webster.com', 1),
(1, 'https://wordpress.com', 1),
(1, 'https://nsw.gov.au', 1),
(1, 'https://www.barnesandnoble.com', 1),
(1, 'https://www.yahoo.com', 1),
(2, 'https://www.is.gd', 1),
(2, 'https://www.unesco.org', 1),
(3, 'https://xinhuanet.com', 1),
(3, 'https://cyberchimps.com', 1),
(3, 'https://ask.com', 1),
(3, 'https://businessinsider.com', 1),
(3, 'https://www.dailymail.co.uk', 1),
(3, 'https://www.guardian.co.uk', 1),
(3, 'https://www.microsoft.com', 1),
(3, 'https://www.gizmodo.com', 1),
(3, 'https://www.163.com', 1);

ANSWER
------
SELECT EMAIL, COUNT(IS_ACTIVE) AS TOTAL_ACTIVE_SITES
FROM CUSTOMERS2 AS C INNER JOIN SITES AS S 
ON C.ID=S.CUSTOMER_ID
GROUP BY EMAIL
ORDER BY EMAIL ASC

Question 28: Average Income Report in Online Tax Application
------------------------------------------------------------

CREATE TABLE accounts (
    id INT PRIMARY KEY,
    iban VARCHAR(255)
);

CREATE TABLE income (
    account_id INT,
    dt VARCHAR(19),
    amount DECIMAL(6,2),
    FOREIGN KEY (account_id) REFERENCES accounts(id)
);

INSERT INTO accounts VALUES
(1, 'SK39 8924 2092 2997 1101 4161'),
(2, 'PL28 9141 8610 8442 2367 7521 0000'),
(3, 'CH93 8418 OF7G KOK4 NEHF Q'),
(4, 'GT41 TBM8 DPFH MTNS BVW5 D4CX VIRR'),
(5, 'IT27 Y015 0159 036T W7E5 I6ZD EQZ');

INSERT INTO income VALUES
(1, '2024-01-17 16:43:20', 4061.53),
(1, '2024-02-28 05:30:15', 4488.11),
(1, '2024-04-07 05:41:27', 4001.91),
(2, '2024-01-08 04:48:45', 3640.82),
(2, '2024-01-20 17:31:20', 3385.15),
(3, '2024-01-06 23:18:30', 2347.15),
(3, '2024-03-08 12:53:20', 3814.86),
(4, '2024-01-02 23:52:06', 3526.08),
(4, '2024-02-04 12:32:28', 2221.91),
(4, '2024-02-11 19:44:53', 4197.07),
(4, '2024-03-06 06:28:34', 1357.44),
(4, '2024-03-16 16:13:49', 1854.52),
(5, '2024-01-14 18:03:47', 2641.20),
(5, '2024-01-23 07:50:22', 3692.56),
(5, '2024-02-28 23:43:28', 1999.09),
(5, '2024-03-20 10:29:44', 1670.18),
(5, '2024-03-27 11:12:04', 1193.15);

ANSWER
------
SELECT IBAN, ROUND(AVG(AMOUNT),2) AS AVERAGE_INCOME, ROUND(SUM(AMOUNT),2) AS TOTAL_INCOME
FROM ACCOUNTS AS A INNER JOIN INCOME AS I 
ON A.ID=I.ACCOUNT_ID
WHERE TO_TIMESTAMP(DT,'YYYY-MM-DD HH24;MI;SS') BETWEEN '2024-01-01' AND '2024-03-31'
GROUP BY IBAN
ORDER BY AVG(AMOUNT) DESC
LIMIT 3


Question 29: Tax Calculation for Online Tax Application
-------------------------------------------------------

CREATE TABLE accounts (
    id INT PRIMARY KEY,
    iban VARCHAR(255)
);

CREATE TABLE income (
    account_id INT,
    dt VARCHAR(19),
    amount DECIMAL(6,2),
    FOREIGN KEY (account_id) REFERENCES accounts(id)
);

INSERT INTO accounts VALUES
(1, 'FR55 4477 6154 73ND TN3F HMOU T36'),
(2, 'DK46 1272 1831 2573 01'),
(3, 'RS53 5237 5794 6016 5411 43');

INSERT INTO income VALUES
(1, '2023-02-04 08:50:14', 1777.68),
(1, '2023-02-13 04:22:07', 1954.81),
(1, '2023-03-04 14:46:04', 1547.79),
(1, '2023-05-23 15:42:13', 1208.49),
(1, '2023-05-24 23:24:07', 1521.72),
(1, '2023-07-28 11:01:46', 1792.75),
(1, '2023-12-07 14:19:09', 2374.25),
(2, '2023-02-17 00:59:57', 3074.11),
(2, '2023-03-01 08:17:15', 1007.30),
(2, '2023-08-19 09:16:41', 4515.04),
(3, '2023-05-09 07:28:27', 3158.66),
(3, '2023-05-22 04:39:34', 3851.20),
(3, '2023-07-21 19:51:14', 4152.29),
(3, '2023-10-05 05:42:49', 4722.20),
(3, '2023-11-11 02:42:59', 1592.16);

ANSWER
------
SELECT IBAN, SUM(AMOUNT) AS TOTAL_INCOME, '20%' AS TX_RATE, ROUND(SUM(AMOUNT) * 0.20, 2) AS CALCULATED_TAX
FROM ACCOUNTS2 AS A INNER JOIN INCOME2 AS I
ON A.ID=I.ACCOUNT_ID
WHERE EXTRACT(YEAR FROM CAST(I.DT AS TIMESTAMP))=2023
GROUP BY IBAN 
ORDER BY IBAN ASC

Question 30: Monthly Budget Report for Online Budgeting Application
-------------------------------------------------------------------

CREATE TABLE customers (
    id INT PRIMARY KEY,
    email VARCHAR(255)
);

CREATE TABLE expenses (
    customer_id INT,
    dt VARCHAR(19),
    amount DECIMAL(6,2),
    FOREIGN KEY (customer_id) REFERENCES customers(id)
);

CREATE TABLE income (
    customer_id INT,
    dt VARCHAR(19),
    amount DECIMAL(6,2),
    FOREIGN KEY (customer_id) REFERENCES customers(id)
);

INSERT INTO customers VALUES
(1, 'otoohey0@elpais.com'),
(2, 'egrebbin1@state.gov'),
(3, 'arides2@sohu.com');

INSERT INTO expenses VALUES
(1, '2024-03-10 05:19:43', 442.01),
(1, '2024-03-11 19:48:25', 327.35),
(1, '2024-03-24 22:03:06', 639.62),
(1, '2024-03-29 00:37:46', 150.12),
(2, '2024-03-11 15:34:19', 298.41),
(2, '2024-03-25 04:36:27', 376.87),
(2, '2024-03-29 19:05:51', 530.07),
(2, '2024-03-30 07:07:28', 287.84),
(3, '2024-03-01 16:02:47', 33.30),
(3, '2024-03-06 11:53:42', 838.51),
(3, '2024-03-20 23:34:48', 968.08),
(3, '2024-03-21 21:18:08', 35.36),
(3, '2024-03-30 06:51:13', 956.12),
(3, '2024-03-31 10:11:56', 896.32),
(3, '2024-03-31 22:36:57', 740.94);

INSERT INTO income VALUES
(1, '2024-03-11 03:25:04', 769.38),
(1, '2024-03-15 00:49:53', 84.10),
(1, '2024-03-21 18:32:51', 839.48),
(1, '2024-03-29 15:34:13', 333.97),
(2, '2024-03-19 09:24:47', 24.08),
(2, '2024-03-20 15:54:24', 988.34),
(3, '2024-03-01 05:10:42', 962.60),
(3, '2024-03-04 08:27:34', 30.21),
(3, '2024-03-19 12:12:01', 80.00),
(3, '2024-03-21 00:32:10', 674.76),
(3, '2024-03-23 14:14:32', 863.79);

ANSWER
------

SELECT EMAIL, SUM(E.AMOUNT), SUM(I.AMOUNT)
FROM CUSTOMERS3 AS C
INNER JOIN EXPENSES3 AS E ON C.ID = E.CUSTOMER_ID
INNER JOIN INCOME3 AS I ON E.CUSTOMER_ID = I.CUSTOMER_ID
WHERE EXTRACT(YEAR FROM CAST(E.DT AS TIMESTAMP))=2024 AND EXTRACT(YEAR FROM CAST (I.DT AS TIMESTAMP))=2024 AND 
EXTRACT(MONTH FROM CAST(E.DT AS TIMESTAMP))=03
GROUP BY EMAIL;

Question 31: Balance Report for Online Budgeting Application
------------------------------------------------------------
CREATE TABLE customers (
    id INT PRIMARY KEY,
    email VARCHAR(255)
);

CREATE TABLE expenses (
    customer_id INT,
    amount DECIMAL(6, 2),
    FOREIGN KEY (customer_id) REFERENCES customers(id)
);

CREATE TABLE income (
    customer_id INT,
    amount DECIMAL(6, 2),
    FOREIGN KEY (customer_id) REFERENCES customers(id)
);

INSERT INTO customers (id, email) VALUES
(1, 'dtollmache0@typepad.com'),
(2, 'eclutterbuck1@baidu.com'),
(3, 'mdensun2@ustream.tv');

INSERT INTO expenses (customer_id, amount) VALUES
(1, 136.18),
(1, 323.28),
(1, 383.37),
(1, 505.41),
(1, 841.21),
(2, 5.23),
(2, 408.33),
(2, 489.45),
(2, 545.40),
(2, 591.43),
(2, 706.13),
(2, 716.82),
(2, 761.75),
(2, 796.30),
(3, 152.26),
(3, 211.30),
(3, 447.57),
(3, 685.03),
(3, 966.89),
(3, 967.30);

INSERT INTO income (customer_id, amount) VALUES
(1, 39.44),
(1, 49.49),
(1, 292.19),
(1, 419.36),
(1, 529.26),
(1, 695.43),
(1, 763.72),
(1, 797.92),
(1, 833.34),
(2, 139.42),
(2, 422.18),
(2, 506.59),
(2, 566.00),
(2, 697.92),
(2, 938.51),
(3, 304.66),
(3, 345.03),
(3, 371.86),
(3, 371.88),
(3, 552.08);

Question 32: Monthly Sales Report
---------------------------------

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(255)
);

CREATE TABLE sales (
    product_id INT,
    dt VARCHAR(19),
    amount DECIMAL(7, 2),
    FOREIGN KEY (product_id) REFERENCES products(id)
);

INSERT INTO products (id, name) VALUES
(1, 'Luxury Gold Watch'),
(2, 'Smartphone Holder Stand'),
(3, 'Stainless Steel Water Bottle');

INSERT INTO sales (product_id, dt, amount) VALUES
(1, '2024-01-13 17:12:22', 7008.16),
(1, '2024-01-03 03:15:27', 6191.64),
(1, '2024-01-22 18:29:09', 4527.86),
(1, '2024-01-26 19:38:53', 7828.36),
(1, '2024-02-17 09:27:13', 5273.16),
(1, '2024-02-11 09:51:24', 3364.73),
(1, '2024-02-22 23:53:15', 8584.33),
(2, '2024-01-28 11:33:58', 3710.06),
(2, '2024-01-25 14:47:25', 5221.02),
(2, '2024-01-21 07:58:53', 2525.72),
(2, '2024-03-15 14:16:18', 8158.08),
(2, '2024-03-12 17:02:01', 6760.77),
(3, '2024-01-13 19:27:51', 1942.79),
(3, '2024-02-15 08:04:40', 9186.38),
(3, '2024-03-06 08:02:37', 5821.97),
(3, '2024-03-03 15:39:18', 8676.24),
(2, '2024-04-08 09:53:01', 6327.20),
(1, '2023-12-26 05:48:22', 8360.43),
(1, '2023-12-15 14:52:51', 9101.30),
(3, '2023-12-21 15:57:50', 3857.98);

Question 33: IT Project Resource Analysis
-----------------------------------------

CREATE TABLE projects (
    id INT PRIMARY KEY,
    name VARCHAR(255)
);

CREATE TABLE employees (
    id INT PRIMARY KEY,
    ein VARCHAR(255),
    experience_years INT
);

CREATE TABLE projects_employees (
    project_id INT,
    employee_id INT,
    FOREIGN KEY (project_id) REFERENCES projects(id),
    FOREIGN KEY (employee_id) REFERENCES employees(id)
);

INSERT INTO projects (id, name) VALUES
(1, 'Project X'),
(2, 'Sunshine Project'),
(3, 'Blue Sky Initiative');

INSERT INTO employees (id, ein, experience_years) VALUES
(1, '62-0524667', 4),
(2, '62-1435366', 1),
(3, '29-3144922', 1),
(4, '80-9606443', 1),
(5, '63-6630813', 1);

INSERT INTO projects_employees (project_id, employee_id) VALUES
(1, 1),
(1, 1),
(1, 2),
(1, 3),
(1, 5),
(2, 1),
(2, 1),
(2, 2),
(2, 5),
(3, 1),
(3, 1),
(3, 2),
(3, 3),
(3, 3),
(3, 4),
(3, 4),
(3, 5),
(3, 5),
(3, 5),
(3, 5);

Question 34: Ethereum Market Dashboard Analysis
-----------------------------------------------

CREATE TABLE transactions (
    dt VARCHAR(19),
    wallet VARCHAR(255),
    amount DECIMAL(4, 2)
);

INSERT INTO transactions (dt, wallet, amount) VALUES
('2024-01-31 13:42:19', '0x1a2b3c4d5e6f7a8b9c0d1e2f3a4b5c', -5.78),
('2024-01-24 06:07:14', '0x1a2b3c4d5e6f7a8b9c0d1e2f3a4b5c', -2.79),
('2024-01-25 06:39:19', '0x9B8aDc2eFf4cC3DdEe5f6a7B8dE9aC1F', -2.73),
('2024-01-29 04:37:45', '0x9B8aDc2eFf4cC3DdEe5f6a7B8dE9aC1F', 4.68),
('2024-02-28 06:20:04', '0x1a2b3c4d5e6f7a8b9c0d1e2f3a4b5c', -7.36),
('2024-02-12 07:45:28', '0x1a2b3c4d5e6f7a8b9c0d1e2f3a4b5c', -3.71),
('2024-02-25 10:49:54', '0x1a2b3c4d5e6f7a8b9c0d1e2f3a4b5c', -3.53),
('2024-02-03 19:43:00', '0x1a2b3c4d5e6f7a8b9c0d1e2f3a4b5c', 4.01),
('2024-02-14 08:55:30', '0x1a2b3c4d5e6f7a8b9c0d1e2f3a4b5c', 8.20),
('2024-02-16 04:31:26', '0x3a4FbC5Df2E1bBfDdE5c4fA7bF8dE7aC1F', -8.96),
('2024-02-06 23:45:31', '0x3a4FbC5Df2E1bBfDdE5c4fA7bF8dE7aC1F', -7.88),
('2024-02-11 01:00:35', '0x3a4FbC5Df2E1bBfDdE5c4fA7bF8dE7aC1F', -7.66),
('2024-02-25 09:39:01', '0x3a4FbC5Df2E1bBfDdE5c4fA7bF8dE7aC1F', -7.45),
('2024-02-14 04:04:15', '0x3a4FbC5Df2E1bBfDdE5c4fA7bF8dE7aC1F', 4.17),
('2024-02-15 11:47:23', '0x3a4FbC5Df2E1bBfDdE5c4fA7bF8dE7aC1F', 7.56),
('2024-02-24 14:58:54', '0x9B8aDc2eFf4cC3DdEe5f6a7B8dE9aC1F', -1.45),
('2024-02-18 21:17:24', '0x9B8aDc2eFf4cC3DdEe5f6a7B8dE9aC1F', 1.05),
('2024-02-19 11:12:32', '0x9B8aDc2eFf4cC3DdEe5f6a7B8dE9aC1F', 3.67),
('2024-03-09 16:52:14', '0x1a2b3c4d5e6f7a8b9c0d1e2f3a4b5c', 1.07),
('2024-03-07 10:29:46', '0x9B8aDc2eFf4cC3DdEe5f6a7B8dE9aC1F', 7.26);

SELECT
    wallet,
    COUNT(*) AS total_transactions,
    SUM(CASE WHEN amount < 0 THEN -amount ELSE 0 END) AS total_sold,
    SUM(CASE WHEN amount >= 0 THEN amount ELSE 0 END) AS total_purchase
FROM transactions
WHERE EXTRACT(YEAR FROM CAST(dt AS TIMESTAMP)) = 2024
  AND EXTRACT(MONTH FROM CAST(dt AS TIMESTAMP)) = 2
GROUP BY wallet;

Question 35 - : Employee Leave Tracker
--------------------------------------

create table employees(
id int primary key,
email varchar(255)
)

create table leave_records(
employee_id int references employees(id),
leave_dt varchar(19),
days_taken int
)

insert into employees(id,email) values 
(1,'jeqrqefrqefr'),
(2,'chbfgfwbgwjf'),
(3,'lfsgwrgw')

INSERT INTO leave_records (employee_id, leave_dt, days_taken) VALUES
(1, '2022-11-10 11:52:14', 4),
(1, '2022-09-07 23:22:46', 1),
(2, '2022-11-11 01:47:50', 7),
(3, '2022-11-06 23:12:27', 7),
(3, '2022-11-17 07:43:18', 7),
(1, '2023-05-19 04:40:25', 2),
(1, '2023-12-25 16:29:51', 7),
(1, '2023-03-12 18:54:29', 1),
(1, '2023-08-23 12:33:56', 6),
(2, '2023-04-20 04:19:10', 5),
(2, '2023-04-28 00:41:50', 7),
(3, '2023-06-11 18:49:25', 2),
(3, '2023-12-23 15:53:10', 7),
(3, '2023-03-13 13:46:16', 2),
(3, '2023-10-08 11:57:43', 2),
(3, '2023-04-12 07:49:02', 4),
(3, '2023-01-17 06:05:35', 6),
(1, '2024-02-05 16:01:59', 1),
(1, '2024-01-05 22:15:30', 7),
(2, '2024-02-21 00:50:11', 4);

ANSWER
------
SELECT
    e.email, 
    SUM(l.days_taken) AS leave_days_taken,
    CASE 
        WHEN SUM(l.days_taken) <= 20 THEN 'Within Limit'
        ELSE 'Exceeded'
    END AS leave_status
FROM 
    employees AS e
INNER JOIN 
    leave_records AS l ON e.id = l.employee_id
WHERE 
    EXTRACT(YEAR FROM CAST(l.leave_dt AS TIMESTAMP)) = 2023
GROUP BY 
    e.email;

Question 36: Email Platform Engagement Stats
--------------------------------------------

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    name VARCHAR(255)
);

CREATE TABLE email_stats (
    campaign_id INT,
    emails_sent INT,
    emails_opened INT,
    FOREIGN KEY (campaign_id) REFERENCES campaigns(id)
);

INSERT INTO campaigns (id, name) VALUES
(1, 'Summer Sale 2021'),
(2, 'Fall Promo'),
(3, 'Winter Wonderland');

INSERT INTO email_stats (campaign_id, emails_sent, emails_opened) VALUES
(1, 1749, 775),
(1, 641, 423),
(1, 976, 598),
(1, 756, 121),
(1, 975, 107),
(1, 752, 367),
(1, 1068, 809),
(1, 1046, 589),
(1, 1212, 939),
(1, 567, 214),
(2, 1084, 283),
(2, 992, 478),
(2, 1505, 604),
(3, 899, 315),
(3, 742, 554),
(3, 1744, 917),
(3, 1163, 423),
(3, 1501, 948),
(3, 736, 451),
(3, 537, 434);

Question 37: Bond Maturity Analysis
-----------------------------------

CREATE TABLE bonds (
    id INT PRIMARY KEY,
    name VARCHAR(255)
);

CREATE TABLE maturities (
    bond_id INT,
    maturity DATE,
    FOREIGN KEY (bond_id) REFERENCES bonds(id)
);

INSERT INTO bonds (id, name) VALUES
(1, 'Alpha Mortgage Bond'),
(2, 'Beta Mortgage Bond'),
(3, 'Gamma Mortgage Bond');

INSERT INTO maturities (bond_id, maturity) VALUES
(1, '2024-01-26'),
(1, '2024-02-22'),
(1, '2024-03-26'),
(1, '2024-05-13'),
(1, '2024-07-06'),
(1, '2024-08-23'),
(1, '2024-09-06'),
(1, '2024-11-30'),
(1, '2024-12-30'),
(1, '2025-04-30'),
(1, '2025-05-03'),
(2, '2024-07-25'),
(2, '2024-12-07'),
(3, '2023-12-16'),
(3, '2024-01-25'),
(3, '2024-01-26'),
(3, '2024-05-04'),
(3, '2024-10-02'),
(3, '2024-12-14'),
(3, '2025-01-15');

Question 38: Bond Interest Rate Analysis
----------------------------------------

CREATE TABLE bonds (
    id INT PRIMARY KEY,
    name VARCHAR(255)
);

CREATE TABLE interest_rates (
    bond_id INT,
    rate DECIMAL(2, 1),
    FOREIGN KEY (bond_id) REFERENCES bonds(id)
);

INSERT INTO bonds (id, name) VALUES
(1, 'Alpha Mortgage Bond'),
(2, 'Beta Mortgage Bond'),
(3, 'Gamma Mortgage Bond');

INSERT INTO interest_rates (bond_id, rate) VALUES
(1, 1.4),
(1, 1.8),
(1, 2.0),
(1, 2.4),
(1, 3.4),
(1, 4.6),
(1, 4.7),
(1, 4.9),
(2, 2.0),
(2, 2.1),
(2, 3.0),
(2, 3.2),
(2, 4.0),
(3, 1.2),
(3, 1.3),
(3, 1.4),
(3, 2.1),
(3, 2.5),
(3, 3.5),
(3, 4.0);

Question 39: Bond Cash Flow Analysis for Bondholders
----------------------------------------------------

CREATE TABLE bondholders (
    id INT PRIMARY KEY,
    name VARCHAR(255)
);

CREATE TABLE bonds (
    id INT PRIMARY KEY,
    name VARCHAR(255),
    annual_coupon DECIMAL(5, 2),
    coupons_remaining INT
);

CREATE TABLE bondholders_bonds (
    bondholder_id INT,
    bond_id INT,
    FOREIGN KEY (bondholder_id) REFERENCES bondholders(id),
    FOREIGN KEY (bond_id) REFERENCES bonds(id)
);

INSERT INTO bondholders (id, name) VALUES
(1, 'Alex Smith'),
(2, 'Taylor Johnson'),
(3, 'Jordan Davis');

INSERT INTO bonds (id, name, annual_coupon, coupons_remaining) VALUES
(1, 'Golden Bonds', 150.00, 4),
(2, 'Silver Lining', 200.00, 2),
(3, 'Diamond Trust', 100.00, 4),
(4, 'Emerald Wealth', 350.00, 5),
(5, 'Ruby Returns', 150.00, 8),
(6, 'Sapphire Security', 450.00, 5),
(7, 'Amber Assurance', 100.00, 8),
(8, 'Topaz Treasury', 100.00, 2),
(9, 'Opal Opportunities', 150.00, 5),
(10, 'Pearl Prosperity', 450.00, 5),
(11, 'Platinum Promise', 450.00, 9),
(12, 'Jade Investments', 350.00, 1),
(13, 'Garnet Growth', 150.00, 4),
(14, 'Onyx Returns', 350.00, 2),
(15, 'Quartz Capital', 100.00, 2),
(16, 'Citrine Securities', 250.00, 2),
(17, 'Aquamarine Assets', 250.00, 2),
(18, 'Peridot Portfolio', 300.00, 8),
(19, 'Tourmaline Trust', 100.00, 6),
(20, 'Moonstone Money', 150.00, 9);

INSERT INTO bondholders_bonds (bondholder_id, bond_id) VALUES
(1, 1),
(1, 2),
(1, 6),
(1, 8),
(1, 9),
(1, 13),
(1, 14),
(1, 16),
(1, 17),
(2, 4),
(2, 5),
(2, 7),
(2, 11),
(2, 15),
(2, 18),
(3, 3),
(3, 10),
(3, 12),
(3, 19),
(3, 20);

Question 40: Sum of the Cash Flows Analysis
-------------------------------------------

CREATE TABLE investors (
    id INT PRIMARY KEY,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE cash_flows (
    investor_id INT,
    cash_flow DECIMAL(8, 2),
    FOREIGN KEY (investor_id) REFERENCES investors(id)
);

INSERT INTO investors (id, email) VALUES
(1, 'ematson0@ebay.co.uk'),
(2, 'lsalvadore1@msn.com'),
(3, 'aclowser2@patch.com');

INSERT INTO cash_flows (investor_id, cash_flow) VALUES
(1, 184040.12),
(1, 179280.08),
(1, 179374.42),
(1, 79302.21),
(1, 87466.20),
(1, 194588.36),
(1, 153563.92),
(1, 56377.92),
(2, 59039.14),
(2, 167247.23),
(2, 59311.03),
(2, 183883.00),
(2, 118851.21),
(3, 58868.62),
(3, 96909.26),
(3, 103735.73),
(3, 171261.97),
(3, 86463.11),
(3, 56931.73),
(3, 194699.58);

Question 41: Expected Cash Flow Analysis
----------------------------------------

CREATE TABLE investors (
    id INT PRIMARY KEY,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE cash_flows (
    investor_id INT,
    expected_flow DECIMAL(8, 2),
    FOREIGN KEY (investor_id) REFERENCES investors(id)
);

INSERT INTO investors (id, email) VALUES
(1, 'tdowner0@timesonline.co.uk'),
(2, 'cgarza1@opera.com'),
(3, 'nbarwise2@si.edu');

INSERT INTO cash_flows (investor_id, expected_flow) VALUES
(1, 24923.83),
(1, 30212.10),
(1, 87126.50),
(1, 56018.65),
(1, 93357.47),
(1, 55073.54),
(1, 27095.07),
(2, 44165.12),
(2, 43658.84),
(2, 35835.34),
(2, 12660.46),
(2, 58676.60),
(2, 95929.25),
(2, 47161.23),
(2, 80283.91),
(2, 54427.20),
(2, 93223.98),
(3, 19741.35),
(3, 12243.25),
(3, 50470.06);

Question 42: Online Store Coupon Codes Report
---------------------------------------------

CREATE TABLE coupons (
    id INT PRIMARY KEY,
    coupon_code VARCHAR(255) UNIQUE,
    description VARCHAR(255),
    is_enabled SMALLINT
);

CREATE TABLE coupon_uses (
    coupon_id INT,
    amount DECIMAL(4, 2),
    FOREIGN KEY (coupon_id) REFERENCES coupons(id)
);

INSERT INTO coupons (id, coupon_code, description, is_enabled) VALUES
(1, 'COUPON123', 'nisi nam ultrices libero non', 0),
(2, 'SAVE20', 'ac est lacinia', 1),
(3, 'DISCOUNT50', 'quis odio consequat', 1);

INSERT INTO coupon_uses (coupon_id, amount) VALUES
(1, 36.68),
(1, 3.56),
(1, 2.10),
(1, 39.58),
(2, 39.81),
(2, 24.07),
(2, 28.42),
(2, 31.03),
(2, 3.24),
(2, 36.33),
(3, 8.89),
(3, 30.44),
(3, 36.94),
(3, 42.65),
(3, 33.61),
(3, 41.92),
(3, 1.78),
(3, 20.26),
(3, 27.92),
(3, 0.23);

Question 43: Freelancer Platform Yearly Income Report
-----------------------------------------------------

CREATE TABLE professions (
    id INT PRIMARY KEY,
    title VARCHAR(255) UNIQUE
);

CREATE TABLE freelancers (
    id INT PRIMARY KEY,
    profession_id INT,
    email VARCHAR(255) UNIQUE,
    FOREIGN KEY (profession_id) REFERENCES professions(id)
);

CREATE TABLE projects (
    id INT PRIMARY KEY,
    freelancer_id INT,
    status ENUM('Completed', 'Ongoing', 'Cancelled'),
    income DECIMAL(6, 2),
    FOREIGN KEY (freelancer_id) REFERENCES freelancers(id)
);


INSERT INTO professions (id, title) VALUES
(1, 'Artificial Intelligence Engineer'),
(3, 'Game Developer'),
(2, 'Network Administrator');

INSERT INTO freelancers (id, profession_id, email) VALUES
(1, 1, 'lfernez0@microsoft.com'),
(3, 2, 'mbrydone2@delicious.com'),
(4, 2, 'jhamp3@4shared.com'),
(5, 3, 'cparfett4@twitter.com');

INSERT INTO projects (id, freelancer_id, status, income) VALUES
(5, 1, 'Completed', 8562.13),
(11, 1, 'Completed', 6727.56),
(10, 3, 'Completed', 3753.46),
(20, 3, 'Completed', 6659.39),
(6, 4, 'Completed', 8459.28),
(13, 4, 'Completed', 5899.31),
(16, 4, 'Completed', 2709.63),
(4, 5, 'Completed', 5029.44),
(7, 5, 'Completed', 1763.94),
(9, 5, 'Completed', 6988.36),
(8, 3, 'Cancelled', 8699.67),
(1, 5, 'Cancelled', 5403.21),
(19, 3, 'Ongoing', 72.51),
(3, 4, 'Ongoing', 8561.14),
(15, 4, 'Ongoing', 9235.78),
(17, 4, 'Ongoing', 4307.76);

Question 44: Ecommerce Warehouse Stock Report
---------------------------------------------

CREATE TABLE categories (
    id INT PRIMARY KEY,
    title VARCHAR(255) UNIQUE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    category_id INT,
    title VARCHAR(255),
    sku VARCHAR(255) UNIQUE,
    stock_number INT,
    FOREIGN KEY (category_id) REFERENCES categories(id)
);

INSERT INTO categories (id, title) VALUES
(1, 'Electronics'),
(2, 'Clothing'),
(3, 'Home & Kitchen');

INSERT INTO products (id, category_id, title, sku, stock_number) VALUES
(11, 1, 'Elegant Gadget', 'EG-11', 4),
(3, 1, 'Luxury Gizmo', 'LG-3', 10),
(19, 1, 'Sleek Widget', 'SW-19', 8),
(8, 1, 'Sleek Widget', 'SW-8', 8),
(14, 2, 'Elegant Gadget', 'EG-14', 2),
(16, 2, 'Elegant Gadget', 'EG-16', 6),
(10, 2, 'Elegant Gadget', 'EG-10', 10),
(7, 2, 'Luxury Gizmo', 'LG-7', 3),
(2, 2, 'Luxury Gizmo', 'LG-2', 8),
(18, 2, 'Luxury Gizmo', 'LG-18', 9),
(1, 2, 'Sleek Widget', 'SW-1', 3),
(6, 2, 'Sleek Widget', 'SW-6', 7),
(20, 3, 'Elegant Gadget', 'EG-20', 10),
(9, 3, 'Luxury Gizmo', 'LG-9', 4),
(12, 3, 'Luxury Gizmo', 'LG-12', 5),
(13, 3, 'Luxury Gizmo', 'LG-13', 5),
(5, 3, 'Luxury Gizmo', 'LG-5', 9),
(4, 3, 'Sleek Widget', 'SW-4', 8),
(15, 3, 'Sleek Widget', 'SW-15', 9),
(17, 3, 'Sleek Widget', 'SW-17', 9);

Question 45: Antivirus Database Quarantine Report
--------------------------------------------------

CREATE TABLE threat_types (
    id INT PRIMARY KEY,
    threat_type VARCHAR(255)
);

CREATE TABLE quarantine_urls (
    id INT PRIMARY KEY,
    threat_id INT,
    domain_name VARCHAR(255),
    status ENUM('Quarantined', 'Safe', 'Deleted'),
    users_affected INT,
    FOREIGN KEY (threat_id) REFERENCES threat_types(id)
);

INSERT INTO threat_types (id, threat_type) VALUES
(1, 'Phishing'),
(2, 'Rootkit'),
(3, 'Malware');

INSERT INTO quarantine_urls (id, threat_id, domain_name, status, users_affected) VALUES
(17, 1, 'amazon.com', 'Quarantined', 862),
(16, 1, 'google.com', 'Quarantined', 63),
(9, 1, 'amazon.com', 'Quarantined', 41),
(18, 2, 'amazon.com', 'Quarantined', 149),
(12, 2, 'yahoo.com', 'Quarantined', 967),
(4, 3, 'amazon.com', 'Quarantined', 377),
(10, 3, 'yahoo.com', 'Quarantined', 721),
(11, 1, 'yahoo.com', 'Deleted', 551),
(20, 1, 'amazon.com', 'Safe', 407),
(19, 1, 'amazon.com', 'Deleted', 665),
(15, 1, 'facebook.com', 'Safe', 52),
(2, 1, 'google.com', 'Safe', 309),
(1, 2, 'twitter.com', 'Safe', 562),
(13, 2, 'facebook.com', 'Safe', 208),
(14, 2, 'google.com', 'Deleted', 731),
(8, 2, 'twitter.com', 'Safe', 924),
(7, 2, 'twitter.com', 'Safe', 982),
(6, 2, 'google.com', 'Deleted', 864),
(3, 2, 'facebook.com', 'Safe', 136),
(5, 3, 'yahoo.com', 'Safe', 949);

Question 46: Online Streaming Service Traffic Report
----------------------------------------------------

CREATE TABLE clients (
    id INT PRIMARY KEY,
    mac_address VARCHAR(255)
);

CREATE TABLE streams (
    client_id INT,
    title VARCHAR(255),
    quality ENUM('240p', '360p', '480p', '720p', '1080p', '1440p', '2160p'),
    traffic INT,
    FOREIGN KEY (client_id) REFERENCES clients(id)
);

INSERT INTO clients (id, mac_address) VALUES
(1, '2F-80-8E-F2-0E-4C'),
(2, 'A1-F7-D4-48-B9-E6'),
(3, '9F-72-DB-7C-73-FC');

INSERT INTO streams (client_id, title, quality, traffic) VALUES
(1, 'Monte Carlo', '360p', 71928308),
(1, 'Separation, The (Sparation, La)', '480p', 35221785),
(1, 'Felidae', '480p', 54617023),
(1, 'Dirty Dancing', '1440p', 56419563),
(1, 'Ragtime', '1440p', 12404457),
(1, 'Oscar', '1440p', 49717246),
(1, 'Barb Wire', '2160p', 83761463),
(1, 'Jason and the Argonauts', '2160p', 27364051),
(2, 'Carry on Cruising', '240p', 33226462),
(2, 'Best of the Best', '240p', 62793858),
(2, 'Ecstasy (Xtasis)', '240p', 73079415),
(2, 'Go Go Tales', '480p', 48836837),
(2, 'Nights and Weekends', '1440p', 32708277),
(3, 'Coneheads', '480p', 92308213),
(3, 'Silences of the Palace, The (Saimt el Qusur)', '480p', 52917945),
(3, 'Good Pick', '720p', 71890218),
(3, 'Wuthering Heights', '720p', 19813053),
(3, 'Big Kahuna, The', '1080p', 28786846),
(3, 'Work of Director Michel Gondry, The', '2160p', 18789351),
(3, 'My Best Friends', '2160p', 44347338);


Question 47: Cloud Hosting Instances Performance Statistics
-----------------------------------------------------------

CREATE TABLE networks (
    id INT PRIMARY KEY,
    cidr VARCHAR(255)
);

CREATE TABLE instances (
    network_id INT,
    cpu_usage VARCHAR(255),
    memory_usage VARCHAR(255),
    network_usage VARCHAR(255),
    FOREIGN KEY (network_id) REFERENCES networks(id)
);

INSERT INTO networks (id, cidr) VALUES
(1, '24.77.36.156/9'),
(2, '74.213.138.70/7'),
(3, '167.244.163.58/29');

INSERT INTO instances (network_id, cpu_usage, memory_usage, network_usage) VALUES
(1, '20%', '74%', '74%'),
(3, '26%', '9%', '99%'),
(3, '2%', '21%', '97%'),
(1, '51%', '19%', '89%'),
(2, '2%', '27%', '79%'),
(3, '92%', '35%', '41%'),
(2, '27%', '5%', '44%'),
(3, '67%', '47%', '79%'),
(1, '14%', '28%', '43%'),
(3, '47%', '0%', '53%'),
(1, '38%', '3%', '46%'),
(2, '71%', '51%', '6%'),
(3, '77%', '74%', '53%'),
(3, '31%', '48%', '80%'),
(2, '31%', '42%', '24%'),
(1, '77%', '65%', '46%'),
(2, '51%', '94%', '41%'),
(3, '8%', '3%', '57%'),
(1, '1%', '56%', '62%'),
(2, '15%', '66%', '65%');


Question 48: AI Video Processing Service Usage Time Calculation
---------------------------------------------------------------

CREATE TABLE tasks (
    id INT PRIMARY KEY,
    hash VARCHAR(255)
);

CREATE TABLE processes (
    task_id INT,
    start_dt VARCHAR(19),
    end_dt VARCHAR(19),
    FOREIGN KEY (task_id) REFERENCES tasks(id)
);

INSERT INTO tasks (id, hash) VALUES
(1, '208f95e0fcff792f617ade3cebf33ad9'),
(2, '0f44a9ffead2f18a7f25425c1260fc74'),
(3, 'dbcf54e94395c32e01ec09a5db731912');

INSERT INTO processes (task_id, start_dt, end_dt) VALUES
(1, '2023-04-20 02:01:16', '2023-04-20 02:11:35'),
(1, '2023-04-09 15:11:10', '2023-04-09 15:26:43'),
(1, '2023-04-07 23:41:49', '2023-04-08 00:34:10'),
(2, '2023-04-07 23:05:47', '2023-04-08 00:00:05'),
(2, '2023-04-19 18:39:33', '2023-04-19 18:54:57'),
(2, '2023-04-28 13:17:11', '2023-04-28 13:24:37'),
(2, '2023-04-16 00:13:06', '2023-04-16 01:02:39'),
(2, '2023-04-16 15:02:26', '2023-04-16 15:58:14'),
(2, '2023-04-27 02:23:07', '2023-04-27 02:59:13'),
(2, '2023-04-10 23:33:47', '2023-04-11 00:09:35'),
(2, '2023-04-16 17:29:51', '2023-04-16 18:10:22'),
(2, '2023-04-23 12:16:01', '2023-04-23 12:48:07'),
(3, '2023-04-01 02:25:12', '2023-04-01 02:49:26'),
(3, '2023-04-04 03:02:43', '2023-04-04 03:42:03'),
(3, '2023-04-10 22:42:26', '2023-04-10 23:14:42'),
(3, '2023-04-09 17:46:12', '2023-04-09 18:10:19'),
(3, '2023-04-25 15:09:36', '2023-04-25 15:19:54'),
(3, '2023-04-19 14:39:52', '2023-04-19 15:21:23'),
(3, '2023-04-12 04:22:29', '2023-04-12 04:25:10'),
(3, '2023-04-25 07:40:26', '2023-04-25 08:01:30');


Question 49: Benchmarking Tool Report
-------------------------------------

CREATE TABLE devices (
    id INT PRIMARY KEY,
    score INT
);


INSERT INTO devices (id, score) VALUES
(1, 20),
(2, 50),
(3, 50),
(4, 68),
(5, 95);


Question 50: Smart Home Application Customer Report
---------------------------------------------------

CREATE TABLE accounts (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255)
);

CREATE TABLE tariffs (
    id INT PRIMARY KEY,
    name ENUM('A', 'B', 'C', 'D', 'E'),
    cost DECIMAL(4, 3)
);

CREATE TABLE readings (
    account_id INT,
    tariff_id INT,
    amount SMALLINT,
    FOREIGN KEY (account_id) REFERENCES accounts(id),
    FOREIGN KEY (tariff_id) REFERENCES tariffs(id)
);

INSERT INTO accounts (id, username, email) VALUES
(1, 'hshillabeare0', 'rcalkin0@sourceforge.net'),
(2, 'sdandy1', 'agaule1@businessweek.com'),
(3, 'sgreiswood2', 'toppy2@lulu.com');

INSERT INTO tariffs (id, name, cost) VALUES
(1, 'A', 0.010),
(2, 'B', 0.020),
(3, 'C', 0.050),
(4, 'D', 0.075),
(5, 'E', 0.100);

INSERT INTO readings (account_id, tariff_id, amount) VALUES
(1, 2, 54),
(1, 3, 19),
(1, 3, 37),
(1, 3, 89),
(1, 3, 119),
(2, 1, 12),
(2, 1, 44),
(2, 1, 81),
(2, 2, 60),
(2, 2, 164),
(2, 2, 199),
(2, 3, 79),
(2, 5, 186),
(3, 1, 31),
(3, 1, 59),
(3, 1, 77),
(3, 1, 95),
(3, 1, 110),
(3, 1, 125),
(3, 2, 31);

Question 51: MMORPG Game Inventory Overload Notification
--------------------------------------------------------

CREATE TABLE accounts (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255)
);

CREATE TABLE items (
    id INT PRIMARY KEY,
    type ENUM('sword', 'shield', 'armor'),
    name VARCHAR(255),
    weight SMALLINT
);

CREATE TABLE accounts_items (
    account_id INT,
    item_id INT,
    FOREIGN KEY (account_id) REFERENCES accounts(id),
    FOREIGN KEY (item_id) REFERENCES items(id)
);

INSERT INTO accounts (id, username, email) VALUES
(1, 'esoane0', 'alefwich0@nytimes.com'),
(2, 'jrafter1', 'bmacniff1@census.gov'),
(3, 'rcawston2', 'fnikoll2@flickr.com');

INSERT INTO items (id, type, name, weight) VALUES
(1, 'shield', 'Shield of Asteraceae', 3),
(2, 'sword', 'Sword of Cyperaceae', 3),
(3, 'shield', 'Shield of Apiaceae', 3),
(4, 'sword', 'Sword of Onagraceae', 3),
(5, 'sword', 'Sword of Campanulaceae', 3);

INSERT INTO accounts_items (account_id, item_id) VALUES
(1, 2),
(1, 3),
(1, 3),
(1, 4),
(1, 4),
(1, 5),
(1, 5),
(1, 5),
(2, 1),
(2, 1),
(2, 2),
(2, 2),
(2, 2),
(2, 2),
(2, 2),
(2, 3),
(2, 3),
(2, 5),
(3, 3),
(3, 4);

Question 52: Outdoor Banner Digital Marketplace Placement Report
----------------------------------------------------------------

CREATE TABLE cities (
    id INT PRIMARY KEY,
    name VARCHAR(255)
);

CREATE TABLE banners (
    city_id INT,
    width SMALLINT,
    height SMALLINT,
    FOREIGN KEY (city_id) REFERENCES cities(id)
);

INSERT INTO cities (id, name) VALUES
(1, 'Kayu Agung'),
(2, 'Yangkou'),
(3, 'Marseille');

INSERT INTO banners (city_id, width, height) VALUES
(3, 6, 20),
(1, 20, 14),
(1, 6, 17),
(1, 15, 6),
(2, 16, 8),
(2, 6, 7),
(3, 6, 9),
(1, 20, 16),
(3, 19, 14),
(2, 9, 17),
(2, 8, 12),
(1, 12, 16),
(3, 15, 14),
(3, 11, 7),
(3, 6, 14),
(2, 12, 7),
(3, 7, 20),
(1, 13, 6),
(3, 10, 13),
(2, 19, 15);

Question 53: Auction Web Service Lot Statistics
-----------------------------------------------

CREATE TABLE lots (
    id INT PRIMARY KEY,
    name VARCHAR(255)
);

CREATE TABLE offers (
    lot_id INT,
    amount DECIMAL(6, 2),
    FOREIGN KEY (lot_id) REFERENCES lots(id)
);


INSERT INTO lots (id, name) VALUES
(1, 'Merremia quinquefolia (L.) Hallier f.'),
(2, 'Plantago maritima L.'),
(3, 'Hohenbergia antillana Mez'),
(4, 'Penstemon eriantherus Pursh var. argillosus M.E. Jones');

INSERT INTO offers (lot_id, amount) VALUES
(1, 510.51),
(2, 703.80),
(2, 181.80),
(1, 38.06),
(2, 368.78),
(3, 91.40),
(2, 413.80),
(3, 157.99),
(3, 885.82),
(2, 863.99),
(1, 307.61),
(2, 120.39),
(1, 771.96),
(2, 801.42),
(3, 871.59),
(1, 541.61),
(3, 477.62),
(2, 303.29),
(2, 612.83),
(3, 464.98);

Question 54: Tax Calculator Web Service Simple Report
-----------------------------------------------------

CREATE TABLE accounts (
    id INT PRIMARY KEY,
    first_name VARCHAR(255),
    last_name VARCHAR(255),
    iban VARCHAR(255)
);

CREATE TABLE declarations (
    account_id INT,
    quarter ENUM('Q1', 'Q2', 'Q3', 'Q4'),
    income DECIMAL(7, 2),
    FOREIGN KEY (account_id) REFERENCES accounts(id)
);


INSERT INTO accounts (id, first_name, last_name, iban) VALUES
(1, 'Alex', 'Cantua', 'IL29 9590 1551 0560 0553 712'),
(2, 'Chris', 'Lashmore', 'AZ54 CNUI 01DR XEXZ ASKY QM4W F8JI'),
(3, 'Taylor', 'Blum', 'HR20 2041 7741 5014 9873 9'),
(4, 'Robin', 'Neachell', 'NL87 PPCD 0429 1849 92'),
(5, 'Drew', 'Barbier', 'FR72 7843 3990 42WM QC8P GVNV F78');

INSERT INTO declarations (account_id, quarter, income) VALUES
(1, 'Q1', 49235.67),
(1, 'Q2', 46653.11),
(1, 'Q3', 63739.99),
(1, 'Q4', 43222.54),
(2, 'Q1', 69743.50),
(2, 'Q2', 29641.01),
(2, 'Q3', 97725.49),
(2, 'Q4', 91481.98),
(3, 'Q1', 68402.43),
(3, 'Q2', 12660.12),
(3, 'Q3', 59601.65),
(3, 'Q4', 54701.74),
(4, 'Q1', 55220.27),
(4, 'Q2', 87752.41),
(4, 'Q3', 44447.06),
(4, 'Q4', 45876.26),
(5, 'Q1', 42511.74),
(5, 'Q2', 22022.78),
(5, 'Q3', 88396.81),
(5, 'Q4', 67252.54);

Question 55: Social Network Relationship Statistics
---------------------------------------------------

CREATE TABLE profiles (
    id INT PRIMARY KEY,
    first_name VARCHAR(255),
    last_name VARCHAR(255),
    email VARCHAR(255)
);

CREATE TABLE relations (
    profile_id INT,
    related_to VARCHAR(255),
    is_approved BOOLEAN,
    FOREIGN KEY (profile_id) REFERENCES profiles(id)
);

INSERT INTO profiles (id, first_name, last_name, email) VALUES
(1, 'Shayne', 'Shilito', 'sshilito0@ftc.gov'),
(2, 'Shell', 'Shade', 'sshade1@paginagialle.it'),
(3, 'Nobie', 'Splain', 'nsplain2@npr.org');

INSERT INTO relations (profile_id, related_to, is_approved) VALUES
(1, 'cbasinigazzii', 1),
(1, 'ldevered', 1),
(1, 'deniskeb', 1),
(1, 'cstirlan4', 1),
(1, 'ngooddiea', 1),
(1, 'alockney7', 1),
(1, 'jsorrillj', 0),
(1, 'bnodin3', 0),
(1, 'dwall2', 0),
(1, 'folivas1', 0),
(2, 'ksharlan6', 0),
(2, 'pbarosch8', 0),
(2, 'smacieja9', 0),
(2, 'bbrasonf', 0),
(2, 'dabrahartg', 0),
(3, 'gaymer5', 1),
(3, 'rwoolcockse', 1),
(3, 'egilyott0', 1),
(3, 'agillionc', 0),
(3, 'fgribbinh', 0);

Question 56: Online Banking Transactions
----------------------------------------

CREATE TABLE accounts (
    id INT PRIMARY KEY,
    iban VARCHAR(255)
);

CREATE TABLE transactions (
    account_id INT,
    dt DATETIME,
    amount DECIMAL(5, 2),
    FOREIGN KEY (account_id) REFERENCES accounts(id)
);

INSERT INTO accounts (id, iban) VALUES
(1, 'SE48 2961 2087 8112 2835 6438'),
(2, 'BE89 2286 5514 4847'),
(3, 'MU84 HRGV 2047 2584 5774 3195 856J PZ');

INSERT INTO transactions (account_id, dt, amount) VALUES
(2, '2022-09-25 19:24:50', 75.06),
(2, '2022-09-24 03:09:17', 41.10),
(1, '2022-09-19 04:13:17', 65.85),
(3, '2022-09-30 07:18:29', 44.57),
(1, '2022-09-26 01:51:44', 98.93),
(1, '2022-08-28 02:51:04', 60.42),
(1, '2022-08-25 23:25:54', 45.34),
(2, '2022-09-09 11:00:48', 11.05),
(3, '2022-08-25 19:37:02', 53.61),
(2, '2022-09-23 09:44:05', 89.18),
(1, '2022-08-28 19:48:40', 47.60),
(3, '2022-09-12 10:28:10', 96.40),
(3, '2022-10-03 16:49:51', 45.41),
(2, '2022-09-05 16:20:41', 46.78),
(3, '2022-10-03 04:51:29', 50.81),
(1, '2022-09-10 17:31:44', 78.72),
(2, '2022-08-31 21:59:56', 61.09),
(2, '2022-09-14 12:52:13', 20.36),
(1, '2022-09-28 11:05:21', 70.52),
(3, '2022-09-30 09:21:12', 48.00);

Question 57: Internet Service Provider Monthly Report
-----------------------------------------------------
CREATE TABLE clients (
    id SMALLINT PRIMARY KEY,
    mac VARCHAR(17),
    tariff DECIMAL(6, 5)
);

CREATE TABLE traffic (
    client_id SMALLINT,
    dt VARCHAR(19),
    amount INT,
    FOREIGN KEY (client_id) REFERENCES clients(id)
);

INSERT INTO clients (id, mac, tariff) VALUES
(1, 'A2-53-FC-0C-3E-B4', 0.00007),
(2, 'DC-80-42-E9-AE-FC', 0.00003),
(3, '3F-9B-A9-2A-B1-7B', 0.00007),
(4, 'D4-6F-E4-AF-47-D5', 0.00004),
(5, 'B9-65-FC-8E-F0-15', 0.00007);

INSERT INTO traffic (client_id, dt, amount) VALUES
(1, '2022-05-22', 9127),
(1, '2022-06-07', 62203),
(1, '2022-06-10', 88227),
(2, '2022-05-31', 99874),
(2, '2022-06-01', 78400),
(2, '2022-06-03', 61106),
(2, '2022-06-12', 20963),
(2, '2022-06-29', 98304),
(2, '2022-07-04', 6626),
(3, '2022-05-22', 8386),
(3, '2022-06-08', 22959),
(3, '2022-07-05', 52096),
(3, '2022-07-14', 70777),
(4, '2022-05-22', 93743),
(5, '2022-05-16', 84660),
(5, '2022-05-28', 63267),
(5, '2022-06-10', 80681),
(5, '2022-06-21', 55460),
(5, '2022-07-04', 91365),
(5, '2022-07-09', 23296);

Question 58: The Yellow Pages Companies Report
----------------------------------------------

CREATE TABLE companies (
    id SMALLINT PRIMARY KEY,
    name VARCHAR(255),
    address VARCHAR(255),
    phone VARCHAR(255)
);

CREATE TABLE categories (
    company_id SMALLINT,
    name VARCHAR(255),
    review_rating SMALLINT,
    FOREIGN KEY (company_id) REFERENCES companies(id)
);

INSERT INTO companies (id, name, address, phone) VALUES
(1, 'Casper, Oberbrunner and Williamson', '53 Di Loreto Hill', '+420 (569) 566-3689'),
(2, 'Tromp, Kozey and Abbott', '84 Mcguire Plaza', '+62 (145) 722-2330'),
(3, 'Gerlach, Hayes and Stamm', '80 Service Point', '+86 (731) 234-4119'),
(4, 'Wolff-Fadel', '06 Fair Oaks Trail', '+7 (894) 233-0976'),
(5, 'Kihn-Cronin', '483 Nobel Road', '+1 (396) 693-1661');

INSERT INTO categories (company_id, name, review_rating) VALUES
(1, 'HVAC', 2),
(2, 'HVAC', 2),
(2, 'Retaining Wall and Brick Pavers', 1),
(2, 'Rebar & Wire Mesh Install', 2),
(3, 'Prefabricated Aluminum Metal Canopies', 2),
(3, 'Prefabricated Aluminum Metal Canopies', 0),
(3, 'RF Shielding', 2),
(3, 'Overhead Doors', 0),
(3, 'Rebar & Wire Mesh Install', 5),
(3, 'Termite Control', 0),
(4, 'Sitework & Site Utilities', 0),
(4, 'Electrical and Fire Alarm', 2),
(4, 'Masonry', 2),
(4, 'Temp Fencing, Decorative Fencing and Gates', 0),
(4, 'Elevator', 1),
(4, 'Drywall & Acoustical (FED)', 5),
(5, 'Asphalt Paving', 0),
(5, 'Glass & Glazing', 1),
(5, 'Framing (Steel)', 3),
(5, 'Structural & Misc Steel Erection', 1);

Question 59: Domain Name Registrar Accounts Report
--------------------------------------------------

INSERT INTO accounts (id, username, is_active) VALUES
(1, 'obeedie0', 0),
(2, 'stopham1', 1),
(3, 'ndolder2', 1),
(4, 'jyanshinov3', 1),
(5, 'ewilflinger4', 0);

INSERT INTO domains (account_id, name, expiration_date) VALUES
(1, 'imgur.com', '2022-05-14'),
(1, 'domainmarket.com', '2022-07-02'),
(1, 'comsenz.com', '2022-07-28'),
(1, 'gizmodo.com', '2022-08-09'),
(1, 'toplist.cz', '2022-08-15'),
(1, 'scientificamerican.com', '2022-09-03'),
(1, 'examiner.com', '2022-12-18'),
(1, 'photobucket.com', '2023-01-22'),
(2, 'merriam-webster.com', '2022-02-20'),
(2, 'tripod.com', '2022-08-08'),
(3, 'ca.gov', '2022-04-24'),
(3, 'ehow.com', '2022-06-28'),
(3, 'purevolume.com', '2022-07-01'),
(3, 'squidoo.com', '2022-10-27'),
(3, 'eepurl.com', '2022-12-21'),
(4, 'digg.com', '2022-05-14'),
(4, 'jugem.jp', '2022-08-05'),
(4, 'artisteer.com', '2022-10-21'),
(5, 'behance.net', '2022-03-24'),
(5, 'cnn.com', '2022-05-11');

Question 60: Advertising Network Events Report
----------------------------------------------

CREATE TABLE campaigns (
    id SMALLINT PRIMARY KEY,
    name VARCHAR(255)
);

CREATE TABLE events (
    campaign_id SMALLINT,
    dt VARCHAR(19),
    value DECIMAL(6, 5),
    FOREIGN KEY (campaign_id) REFERENCES campaigns(id)
);

INSERT INTO campaigns (id, name) VALUES
(1, '11-080 - Registration Equipment'),
(2, '12-700 - Systems Furniture'),
(3, '9-900 - Paints and Coatings');

INSERT INTO events (campaign_id, dt, value) VALUES
(1, '2022-07-14 13:11:38', 0.59275),
(1, '2022-07-14 14:55:43', 0.12928),
(1, '2022-07-14 18:16:11', 0.82350),
(1, '2022-07-15 01:19:44', 0.97144),
(1, '2022-07-15 22:52:02', 0.60728),
(1, '2022-07-16 08:55:38', 0.71158),
(1, '2022-07-16 10:22:44', 0.29627),
(2, '2022-07-14 02:36:31', 0.42323),
(2, '2022-07-14 04:45:32', 0.91077),
(2, '2022-07-14 07:24:11', 0.35956),
(2, '2022-07-15 06:43:08', 0.16662),
(2, '2022-07-16 08:21:27', 0.02559),
(2, '2022-07-16 11:59:41', 0.34606),
(2, '2022-07-16 23:26:12', 0.62697),
(3, '2022-07-14 00:21:56', 0.97297),
(3, '2022-07-14 10:22:11', 0.93894),
(3, '2022-07-14 12:29:59', 0.44633),
(3, '2022-07-15 01:17:41', 0.37531),
(3, '2022-07-15 14:20:48', 0.24872),
(3, '2022-07-16 23:02:51', 0.80594);




